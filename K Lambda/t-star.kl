"                                                   The License

 

 The user is free to produce commercial applications with the software, to distribute these applications in source or binary  form, and to charge monies for them as he sees fit and in concordance with the laws of the land subject to the following  license.

 

 1. The license applies to all the software and all derived software and must appear on such.

 2. It is illegal to distribute the software without this license attached to it and use of the software implies agreement 

    with the license as such. It is illegal for anyone who is not the copyright holder to tamper with or change the license.

 3. Neither the names of Lambda Associates or the copyright holder may be used to endorse or promote products built using

     the software without specific prior written permission from the copyright holder.

 4. That possession of this license does not confer on the copyright holder any special contractual obligation towards the    user. That in no event shall the copyright holder be liable for any direct, indirect, incidental, special, exemplary or   consequential damages (including but not limited to procurement of substitute goods or services, loss of use, data, or    profits; or business interruption), however caused and on any theory of liability, whether in contract, strict liability   or tort (including negligence) arising in any way out of the use of the software, even if advised of the possibility of   such damage. 

5. It is permitted for the user to change the software, for the purpose of improving performance, correcting an error, or    porting to a new platform, and distribute the modified version of Shen (hereafter the modified version) provided the     resulting program conforms in all respects to the Shen standard and is issued under that title. The user must it clear   with his distribution that he/she is the author of the changes and what these changes are and why. 

6. Derived versions of this software in whatever form are subject to the same restrictions. In particular it is not          permitted to make derived copies of this software which do not conform to the Shen standard or appear under a different title.

7. It is permitted to distribute versions of Shen which incorporate libraries, graphics or other facilities which are not    part of the Shen standard.



For an explication of this license see http://www.lambdassociates.org/News/june11/license.htm which explains this license in full."

(defun shen-typecheck (V761 V762)
 (let Curry (shen-curry V761)
  (let ProcessN (shen-start-new-prolog-process)
   (let Type
    (shen-insert-prolog-variables (shen-normalise-type (shen-curry-type V762))
     ProcessN)
    (let Continuation (freeze (return Type ProcessN shen-void))
     (shen-t* (cons Curry (cons : (cons Type ()))) () ProcessN Continuation))))))

(defun shen-curry (V763)
 (cond
  ((and (cons? V763) (shen-special? (hd V763)))
   (cons (hd V763) (map (lambda X (shen-curry X)) (tl V763))))
  ((and (cons? V763) (and (cons? (tl V763)) (shen-extraspecial? (hd V763))))
   V763)
  ((and (cons? V763) (and (cons? (tl V763)) (cons? (tl (tl V763)))))
   (shen-curry
    (cons (cons (hd V763) (cons (hd (tl V763)) ())) (tl (tl V763)))))
  ((and (cons? V763) (and (cons? (tl V763)) (= () (tl (tl V763)))))
   (cons (shen-curry (hd V763)) (cons (shen-curry (hd (tl V763))) ())))
  (true V763)))

(defun shen-special? (V764) (element? V764 (value shen-*special*)))

(defun shen-extraspecial? (V765) (element? V765 (value shen-*extraspecial*)))

(defun shen-t* (V622 V623 V624 V625)
 (let Throwcontrol (shen-catchpoint)
  (shen-cutpoint Throwcontrol
   (let Case
    (let Error (shen-newpv V624)
     (do (shen-incinfs)
      (fwhen (shen-maxinfexceeded?) V624
       (freeze (bind Error (shen-errormaxinfs) V624 V625)))))
    (if (= Case false)
     (let Case
      (let V616 (shen-lazyderef V622 V624)
       (if (= fail V616)
        (do (shen-incinfs)
         (cut Throwcontrol V624 (freeze (shen-prolog-failure V624 V625))))
        false))
      (if (= Case false)
       (let Case
        (let V617 (shen-lazyderef V622 V624)
         (if (cons? V617)
          (let X (hd V617)
           (let V618 (shen-lazyderef (tl V617) V624)
            (if (cons? V618)
             (let V619 (shen-lazyderef (hd V618) V624)
              (if (= : V619)
               (let V620 (shen-lazyderef (tl V618) V624)
                (if (cons? V620)
                 (let A (hd V620)
                  (let V621 (shen-lazyderef (tl V620) V624)
                   (if (= () V621)
                    (do (shen-incinfs)
                     (fwhen (shen-type-theory-enabled?) V624
                      (freeze
                       (cut Throwcontrol V624
                        (freeze (shen-th* X A V623 V624 V625))))))
                    false)))
                 false))
               false))
             false)))
          false))
        (if (= Case false)
         (let Datatypes (shen-newpv V624)
          (do (shen-incinfs)
           (shen-show V622 V623 V624
            (freeze
             (bind Datatypes (value shen-*datatypes*) V624
              (freeze (shen-udefs* V622 V623 Datatypes V624 V625)))))))
         Case))
       Case))
     Case)))))

(defun shen-type-theory-enabled? ()
  (value shen-*shen-type-theory-enabled?*))

(defun enable-type-theory (V630)
 (cond ((= + V630) (set shen-*shen-type-theory-enabled?* true))
  ((= - V630) (set shen-*shen-type-theory-enabled?* false))
  (true (interror "enable-type-theory expects a + or a -~%" ()))))

(defun shen-prolog-failure (V584 V585) false)

(defun shen-maxinfexceeded? ()
 (> (inferences shen-skip) (value shen-*maxinferences*)))

(defun shen-errormaxinfs () (simple-error "maximum inferences exceeded~%"))

(defun shen-udefs* (V773 V774 V775 V776 V777)
 (let Case
  (let V749 (shen-lazyderef V775 V776)
   (if (cons? V749)
    (let D (hd V749)
     (do (shen-incinfs) (call (cons D (cons V773 (cons V774 ()))) V776 V777)))
    false))
  (if (= Case false)
   (let V750 (shen-lazyderef V775 V776)
    (if (cons? V750)
     (let Ds (tl V750)
      (do (shen-incinfs) (shen-udefs* V773 V774 Ds V776 V777)))
     false))
   Case)))

(defun shen-th* (V1507 V1508 V1509 V1510 V1511)
 (let Throwcontrol (shen-catchpoint)
  (shen-cutpoint Throwcontrol
   (let Case
    (do (shen-incinfs)
     (shen-show (cons V1507 (cons : (cons V1508 ()))) V1509 V1510
      (freeze (fwhen false V1510 V1511))))
    (if (= Case false)
     (let Case
      (let F (shen-newpv V1510)
       (do (shen-incinfs)
        (fwhen (shen-typedf? (shen-lazyderef V1507 V1510)) V1510
         (freeze
          (bind F (shen-sigf (shen-lazyderef V1507 V1510)) V1510
           (freeze (call (cons F (cons V1508 ())) V1510 V1511)))))))
      (if (= Case false)
       (let Case (do (shen-incinfs) (shen-base V1507 V1508 V1510 V1511))
        (if (= Case false)
         (let Case
          (do (shen-incinfs)
           (shen-by_hypothesis V1507 V1508 V1509 V1510 V1511))
          (if (= Case false)
           (let Case
            (let V1397 (shen-lazyderef V1507 V1510)
             (if (cons? V1397)
              (let F (hd V1397)
               (let V1398 (shen-lazyderef (tl V1397) V1510)
                (if (= () V1398)
                 (do (shen-incinfs)
                  (shen-th* F (cons --> (cons V1508 ())) V1509 V1510 V1511))
                 false)))
              false))
            (if (= Case false)
             (let Case
              (let V1399 (shen-lazyderef V1507 V1510)
               (if (cons? V1399)
                (let F (hd V1399)
                 (let V1400 (shen-lazyderef (tl V1399) V1510)
                  (if (cons? V1400)
                   (let X (hd V1400)
                    (let V1401 (shen-lazyderef (tl V1400) V1510)
                     (if (= () V1401)
                      (let B (shen-newpv V1510)
                       (do (shen-incinfs)
                        (shen-th* F (cons B (cons --> (cons V1508 ()))) V1509
                         V1510 (freeze (shen-th* X B V1509 V1510 V1511)))))
                      false)))
                   false)))
                false))
              (if (= Case false)
               (let Case
                (let V1402 (shen-lazyderef V1507 V1510)
                 (if (cons? V1402)
                  (let V1403 (shen-lazyderef (hd V1402) V1510)
                   (if (= cons V1403)
                    (let V1404 (shen-lazyderef (tl V1402) V1510)
                     (if (cons? V1404)
                      (let X (hd V1404)
                       (let V1405 (shen-lazyderef (tl V1404) V1510)
                        (if (cons? V1405)
                         (let Y (hd V1405)
                          (let V1406 (shen-lazyderef (tl V1405) V1510)
                           (if (= () V1406)
                            (let V1407 (shen-lazyderef V1508 V1510)
                             (if (cons? V1407)
                              (let V1408 (shen-lazyderef (hd V1407) V1510)
                               (if (= list V1408)
                                (let V1409 (shen-lazyderef (tl V1407) V1510)
                                 (if (cons? V1409)
                                  (let A (hd V1409)
                                   (let V1410 (shen-lazyderef (tl V1409) V1510)
                                    (if (= () V1410)
                                     (do (shen-incinfs)
                                      (shen-th* X A V1509 V1510
                                       (freeze
                                        (shen-th* Y (cons list (cons A ()))
                                         V1509 V1510 V1511))))
                                     (if (shen-pvar? V1410)
                                      (do (shen-bindv V1410 () V1510)
                                       (let Result
                                        (do (shen-incinfs)
                                         (shen-th* X A V1509 V1510
                                          (freeze
                                           (shen-th* Y (cons list (cons A ()))
                                            V1509 V1510 V1511))))
                                        (do (shen-unbindv V1410 V1510)
                                         Result)))
                                      false))))
                                  (if (shen-pvar? V1409)
                                   (let A (shen-newpv V1510)
                                    (do (shen-bindv V1409 (cons A ()) V1510)
                                     (let Result
                                      (do (shen-incinfs)
                                       (shen-th* X A V1509 V1510
                                        (freeze
                                         (shen-th* Y (cons list (cons A ()))
                                          V1509 V1510 V1511))))
                                      (do (shen-unbindv V1409 V1510) Result))))
                                   false)))
                                (if (shen-pvar? V1408)
                                 (do (shen-bindv V1408 list V1510)
                                  (let Result
                                   (let V1411 (shen-lazyderef (tl V1407) V1510)
                                    (if (cons? V1411)
                                     (let A (hd V1411)
                                      (let V1412
                                       (shen-lazyderef (tl V1411) V1510)
                                       (if (= () V1412)
                                        (do (shen-incinfs)
                                         (shen-th* X A V1509 V1510
                                          (freeze
                                           (shen-th* Y (cons list (cons A ()))
                                            V1509 V1510 V1511))))
                                        (if (shen-pvar? V1412)
                                         (do (shen-bindv V1412 () V1510)
                                          (let Result
                                           (do (shen-incinfs)
                                            (shen-th* X A V1509 V1510
                                             (freeze
                                              (shen-th* Y
                                               (cons list (cons A ())) V1509
                                               V1510 V1511))))
                                           (do (shen-unbindv V1412 V1510)
                                            Result)))
                                         false))))
                                     (if (shen-pvar? V1411)
                                      (let A (shen-newpv V1510)
                                       (do
                                        (shen-bindv V1411 (cons A ()) V1510)
                                        (let Result
                                         (do (shen-incinfs)
                                          (shen-th* X A V1509 V1510
                                           (freeze
                                            (shen-th* Y
                                             (cons list (cons A ())) V1509
                                             V1510 V1511))))
                                         (do (shen-unbindv V1411 V1510)
                                          Result))))
                                      false)))
                                   (do (shen-unbindv V1408 V1510) Result)))
                                 false)))
                              (if (shen-pvar? V1407)
                               (let A (shen-newpv V1510)
                                (do
                                 (shen-bindv V1407 (cons list (cons A ()))
                                  V1510)
                                 (let Result
                                  (do (shen-incinfs)
                                   (shen-th* X A V1509 V1510
                                    (freeze
                                     (shen-th* Y (cons list (cons A ())) V1509
                                      V1510 V1511))))
                                  (do (shen-unbindv V1407 V1510) Result))))
                               false)))
                            false)))
                         false)))
                      false))
                    false))
                  false))
                (if (= Case false)
                 (let Case
                  (let V1413 (shen-lazyderef V1507 V1510)
                   (if (cons? V1413)
                    (let V1414 (shen-lazyderef (hd V1413) V1510)
                     (if (= @p V1414)
                      (let V1415 (shen-lazyderef (tl V1413) V1510)
                       (if (cons? V1415)
                        (let X (hd V1415)
                         (let V1416 (shen-lazyderef (tl V1415) V1510)
                          (if (cons? V1416)
                           (let Y (hd V1416)
                            (let V1417 (shen-lazyderef (tl V1416) V1510)
                             (if (= () V1417)
                              (let V1418 (shen-lazyderef V1508 V1510)
                               (if (cons? V1418)
                                (let A (hd V1418)
                                 (let V1419 (shen-lazyderef (tl V1418) V1510)
                                  (if (cons? V1419)
                                   (let V1420 (shen-lazyderef (hd V1419) V1510)
                                    (if (= * V1420)
                                     (let V1421
                                      (shen-lazyderef (tl V1419) V1510)
                                      (if (cons? V1421)
                                       (let B (hd V1421)
                                        (let V1422
                                         (shen-lazyderef (tl V1421) V1510)
                                         (if (= () V1422)
                                          (do (shen-incinfs)
                                           (shen-th* X A V1509 V1510
                                            (freeze
                                             (shen-th* Y B V1509 V1510
                                              V1511))))
                                          (if (shen-pvar? V1422)
                                           (do (shen-bindv V1422 () V1510)
                                            (let Result
                                             (do (shen-incinfs)
                                              (shen-th* X A V1509 V1510
                                               (freeze
                                                (shen-th* Y B V1509 V1510
                                                 V1511))))
                                             (do (shen-unbindv V1422 V1510)
                                              Result)))
                                           false))))
                                       (if (shen-pvar? V1421)
                                        (let B (shen-newpv V1510)
                                         (do
                                          (shen-bindv V1421 (cons B ()) V1510)
                                          (let Result
                                           (do (shen-incinfs)
                                            (shen-th* X A V1509 V1510
                                             (freeze
                                              (shen-th* Y B V1509 V1510
                                               V1511))))
                                           (do (shen-unbindv V1421 V1510)
                                            Result))))
                                        false)))
                                     (if (shen-pvar? V1420)
                                      (do (shen-bindv V1420 * V1510)
                                       (let Result
                                        (let V1423
                                         (shen-lazyderef (tl V1419) V1510)
                                         (if (cons? V1423)
                                          (let B (hd V1423)
                                           (let V1424
                                            (shen-lazyderef (tl V1423) V1510)
                                            (if (= () V1424)
                                             (do (shen-incinfs)
                                              (shen-th* X A V1509 V1510
                                               (freeze
                                                (shen-th* Y B V1509 V1510
                                                 V1511))))
                                             (if (shen-pvar? V1424)
                                              (do (shen-bindv V1424 () V1510)
                                               (let Result
                                                (do (shen-incinfs)
                                                 (shen-th* X A V1509 V1510
                                                  (freeze
                                                   (shen-th* Y B V1509 V1510
                                                    V1511))))
                                                (do (shen-unbindv V1424 V1510)
                                                 Result)))
                                              false))))
                                          (if (shen-pvar? V1423)
                                           (let B (shen-newpv V1510)
                                            (do
                                             (shen-bindv V1423 (cons B ())
                                              V1510)
                                             (let Result
                                              (do (shen-incinfs)
                                               (shen-th* X A V1509 V1510
                                                (freeze
                                                 (shen-th* Y B V1509 V1510
                                                  V1511))))
                                              (do (shen-unbindv V1423 V1510)
                                               Result))))
                                           false)))
                                        (do (shen-unbindv V1420 V1510)
                                         Result)))
                                      false)))
                                   (if (shen-pvar? V1419)
                                    (let B (shen-newpv V1510)
                                     (do
                                      (shen-bindv V1419 (cons * (cons B ()))
                                       V1510)
                                      (let Result
                                       (do (shen-incinfs)
                                        (shen-th* X A V1509 V1510
                                         (freeze
                                          (shen-th* Y B V1509 V1510 V1511))))
                                       (do (shen-unbindv V1419 V1510)
                                        Result))))
                                    false))))
                                (if (shen-pvar? V1418)
                                 (let A (shen-newpv V1510)
                                  (let B (shen-newpv V1510)
                                   (do
                                    (shen-bindv V1418
                                     (cons A (cons * (cons B ()))) V1510)
                                    (let Result
                                     (do (shen-incinfs)
                                      (shen-th* X A V1509 V1510
                                       (freeze
                                        (shen-th* Y B V1509 V1510 V1511))))
                                     (do (shen-unbindv V1418 V1510) Result)))))
                                 false)))
                              false)))
                           false)))
                        false))
                      false))
                    false))
                  (if (= Case false)
                   (let Case
                    (let V1425 (shen-lazyderef V1507 V1510)
                     (if (cons? V1425)
                      (let V1426 (shen-lazyderef (hd V1425) V1510)
                       (if (= @v V1426)
                        (let V1427 (shen-lazyderef (tl V1425) V1510)
                         (if (cons? V1427)
                          (let X (hd V1427)
                           (let V1428 (shen-lazyderef (tl V1427) V1510)
                            (if (cons? V1428)
                             (let Y (hd V1428)
                              (let V1429 (shen-lazyderef (tl V1428) V1510)
                               (if (= () V1429)
                                (let V1430 (shen-lazyderef V1508 V1510)
                                 (if (cons? V1430)
                                  (let V1431 (shen-lazyderef (hd V1430) V1510)
                                   (if (= vector V1431)
                                    (let V1432
                                     (shen-lazyderef (tl V1430) V1510)
                                     (if (cons? V1432)
                                      (let A (hd V1432)
                                       (let V1433
                                        (shen-lazyderef (tl V1432) V1510)
                                        (if (= () V1433)
                                         (do (shen-incinfs)
                                          (shen-th* X A V1509 V1510
                                           (freeze
                                            (shen-th* Y
                                             (cons vector (cons A ())) V1509
                                             V1510 V1511))))
                                         (if (shen-pvar? V1433)
                                          (do (shen-bindv V1433 () V1510)
                                           (let Result
                                            (do (shen-incinfs)
                                             (shen-th* X A V1509 V1510
                                              (freeze
                                               (shen-th* Y
                                                (cons vector (cons A ()))
                                                V1509 V1510 V1511))))
                                            (do (shen-unbindv V1433 V1510)
                                             Result)))
                                          false))))
                                      (if (shen-pvar? V1432)
                                       (let A (shen-newpv V1510)
                                        (do
                                         (shen-bindv V1432 (cons A ()) V1510)
                                         (let Result
                                          (do (shen-incinfs)
                                           (shen-th* X A V1509 V1510
                                            (freeze
                                             (shen-th* Y
                                              (cons vector (cons A ())) V1509
                                              V1510 V1511))))
                                          (do (shen-unbindv V1432 V1510)
                                           Result))))
                                       false)))
                                    (if (shen-pvar? V1431)
                                     (do (shen-bindv V1431 vector V1510)
                                      (let Result
                                       (let V1434
                                        (shen-lazyderef (tl V1430) V1510)
                                        (if (cons? V1434)
                                         (let A (hd V1434)
                                          (let V1435
                                           (shen-lazyderef (tl V1434) V1510)
                                           (if (= () V1435)
                                            (do (shen-incinfs)
                                             (shen-th* X A V1509 V1510
                                              (freeze
                                               (shen-th* Y
                                                (cons vector (cons A ()))
                                                V1509 V1510 V1511))))
                                            (if (shen-pvar? V1435)
                                             (do (shen-bindv V1435 () V1510)
                                              (let Result
                                               (do (shen-incinfs)
                                                (shen-th* X A V1509 V1510
                                                 (freeze
                                                  (shen-th* Y
                                                   (cons vector (cons A ()))
                                                   V1509 V1510 V1511))))
                                               (do (shen-unbindv V1435 V1510)
                                                Result)))
                                             false))))
                                         (if (shen-pvar? V1434)
                                          (let A (shen-newpv V1510)
                                           (do
                                            (shen-bindv V1434 (cons A ())
                                             V1510)
                                            (let Result
                                             (do (shen-incinfs)
                                              (shen-th* X A V1509 V1510
                                               (freeze
                                                (shen-th* Y
                                                 (cons vector (cons A ()))
                                                 V1509 V1510 V1511))))
                                             (do (shen-unbindv V1434 V1510)
                                              Result))))
                                          false)))
                                       (do (shen-unbindv V1431 V1510) Result)))
                                     false)))
                                  (if (shen-pvar? V1430)
                                   (let A (shen-newpv V1510)
                                    (do
                                     (shen-bindv V1430
                                      (cons vector (cons A ())) V1510)
                                     (let Result
                                      (do (shen-incinfs)
                                       (shen-th* X A V1509 V1510
                                        (freeze
                                         (shen-th* Y (cons vector (cons A ()))
                                          V1509 V1510 V1511))))
                                      (do (shen-unbindv V1430 V1510) Result))))
                                   false)))
                                false)))
                             false)))
                          false))
                        false))
                      false))
                    (if (= Case false)
                     (let Case
                      (let V1436 (shen-lazyderef V1507 V1510)
                       (if (cons? V1436)
                        (let V1437 (shen-lazyderef (hd V1436) V1510)
                         (if (= @s V1437)
                          (let V1438 (shen-lazyderef (tl V1436) V1510)
                           (if (cons? V1438)
                            (let X (hd V1438)
                             (let V1439 (shen-lazyderef (tl V1438) V1510)
                              (if (cons? V1439)
                               (let Y (hd V1439)
                                (let V1440 (shen-lazyderef (tl V1439) V1510)
                                 (if (= () V1440)
                                  (let V1441 (shen-lazyderef V1508 V1510)
                                   (if (= string V1441)
                                    (do (shen-incinfs)
                                     (shen-th* X string V1509 V1510
                                      (freeze
                                       (shen-th* Y string V1509 V1510 V1511))))
                                    (if (shen-pvar? V1441)
                                     (do (shen-bindv V1441 string V1510)
                                      (let Result
                                       (do (shen-incinfs)
                                        (shen-th* X string V1509 V1510
                                         (freeze
                                          (shen-th* Y string V1509 V1510
                                           V1511))))
                                       (do (shen-unbindv V1441 V1510) Result)))
                                     false)))
                                  false)))
                               false)))
                            false))
                          false))
                        false))
                      (if (= Case false)
                       (let Case
                        (let V1442 (shen-lazyderef V1507 V1510)
                         (if (cons? V1442)
                          (let V1443 (shen-lazyderef (hd V1442) V1510)
                           (if (= lambda V1443)
                            (let V1444 (shen-lazyderef (tl V1442) V1510)
                             (if (cons? V1444)
                              (let X (hd V1444)
                               (let V1445 (shen-lazyderef (tl V1444) V1510)
                                (if (cons? V1445)
                                 (let Y (hd V1445)
                                  (let V1446 (shen-lazyderef (tl V1445) V1510)
                                   (if (= () V1446)
                                    (let V1447 (shen-lazyderef V1508 V1510)
                                     (if (cons? V1447)
                                      (let A (hd V1447)
                                       (let V1448
                                        (shen-lazyderef (tl V1447) V1510)
                                        (if (cons? V1448)
                                         (let V1449
                                          (shen-lazyderef (hd V1448) V1510)
                                          (if (= --> V1449)
                                           (let V1450
                                            (shen-lazyderef (tl V1448) V1510)
                                            (if (cons? V1450)
                                             (let B (hd V1450)
                                              (let V1451
                                               (shen-lazyderef (tl V1450)
                                                V1510)
                                               (if (= () V1451)
                                                (let Z (shen-newpv V1510)
                                                 (let X&& (shen-newpv V1510)
                                                  (do (shen-incinfs)
                                                   (cut Throwcontrol V1510
                                                    (freeze
                                                     (bind X&&
                                                      (shen-placeholder) V1510
                                                      (freeze
                                                       (bind Z
                                                        (shen-ebr
                                                         (shen-lazyderef X&&
                                                          V1510)
                                                         (shen-lazyderef X
                                                          V1510)
                                                         (shen-lazyderef Y
                                                          V1510))
                                                        V1510
                                                        (freeze
                                                         (shen-th* Z B
                                                          (cons
                                                           (cons X&&
                                                            (cons :
                                                             (cons A ())))
                                                           V1509)
                                                          V1510 V1511))))))))))
                                                (if (shen-pvar? V1451)
                                                 (do
                                                  (shen-bindv V1451 () V1510)
                                                  (let Result
                                                   (let Z (shen-newpv V1510)
                                                    (let X&& (shen-newpv V1510)
                                                     (do (shen-incinfs)
                                                      (cut Throwcontrol V1510
                                                       (freeze
                                                        (bind X&&
                                                         (shen-placeholder)
                                                         V1510
                                                         (freeze
                                                          (bind Z
                                                           (shen-ebr
                                                            (shen-lazyderef X&&
                                                             V1510)
                                                            (shen-lazyderef X
                                                             V1510)
                                                            (shen-lazyderef Y
                                                             V1510))
                                                           V1510
                                                           (freeze
                                                            (shen-th* Z B
                                                             (cons
                                                              (cons X&&
                                                               (cons :
                                                                (cons A ())))
                                                              V1509)
                                                             V1510
                                                             V1511))))))))))
                                                   (do
                                                    (shen-unbindv V1451 V1510)
                                                    Result)))
                                                 false))))
                                             (if (shen-pvar? V1450)
                                              (let B (shen-newpv V1510)
                                               (do
                                                (shen-bindv V1450 (cons B ())
                                                 V1510)
                                                (let Result
                                                 (let Z (shen-newpv V1510)
                                                  (let X&& (shen-newpv V1510)
                                                   (do (shen-incinfs)
                                                    (cut Throwcontrol V1510
                                                     (freeze
                                                      (bind X&&
                                                       (shen-placeholder) V1510
                                                       (freeze
                                                        (bind Z
                                                         (shen-ebr
                                                          (shen-lazyderef X&&
                                                           V1510)
                                                          (shen-lazyderef X
                                                           V1510)
                                                          (shen-lazyderef Y
                                                           V1510))
                                                         V1510
                                                         (freeze
                                                          (shen-th* Z B
                                                           (cons
                                                            (cons X&&
                                                             (cons :
                                                              (cons A ())))
                                                            V1509)
                                                           V1510
                                                           V1511))))))))))
                                                 (do (shen-unbindv V1450 V1510)
                                                  Result))))
                                              false)))
                                           (if (shen-pvar? V1449)
                                            (do (shen-bindv V1449 --> V1510)
                                             (let Result
                                              (let V1452
                                               (shen-lazyderef (tl V1448)
                                                V1510)
                                               (if (cons? V1452)
                                                (let B (hd V1452)
                                                 (let V1453
                                                  (shen-lazyderef (tl V1452)
                                                   V1510)
                                                  (if (= () V1453)
                                                   (let Z (shen-newpv V1510)
                                                    (let X&& (shen-newpv V1510)
                                                     (do (shen-incinfs)
                                                      (cut Throwcontrol V1510
                                                       (freeze
                                                        (bind X&&
                                                         (shen-placeholder)
                                                         V1510
                                                         (freeze
                                                          (bind Z
                                                           (shen-ebr
                                                            (shen-lazyderef X&&
                                                             V1510)
                                                            (shen-lazyderef X
                                                             V1510)
                                                            (shen-lazyderef Y
                                                             V1510))
                                                           V1510
                                                           (freeze
                                                            (shen-th* Z B
                                                             (cons
                                                              (cons X&&
                                                               (cons :
                                                                (cons A ())))
                                                              V1509)
                                                             V1510
                                                             V1511))))))))))
                                                   (if (shen-pvar? V1453)
                                                    (do
                                                     (shen-bindv V1453 ()
                                                      V1510)
                                                     (let Result
                                                      (let Z (shen-newpv V1510)
                                                       (let X&&
                                                        (shen-newpv V1510)
                                                        (do (shen-incinfs)
                                                         (cut Throwcontrol
                                                          V1510
                                                          (freeze
                                                           (bind X&&
                                                            (shen-placeholder)
                                                            V1510
                                                            (freeze
                                                             (bind Z
                                                              (shen-ebr
                                                               (shen-lazyderef
                                                                X&& V1510)
                                                               (shen-lazyderef
                                                                X V1510)
                                                               (shen-lazyderef
                                                                Y V1510))
                                                              V1510
                                                              (freeze
                                                               (shen-th* Z B
                                                                (cons
                                                                 (cons X&&
                                                                  (cons :
                                                                   (cons A
                                                                    ())))
                                                                 V1509)
                                                                V1510
                                                                V1511))))))))))
                                                      (do
                                                       (shen-unbindv V1453
                                                        V1510)
                                                       Result)))
                                                    false))))
                                                (if (shen-pvar? V1452)
                                                 (let B (shen-newpv V1510)
                                                  (do
                                                   (shen-bindv V1452
                                                    (cons B ()) V1510)
                                                   (let Result
                                                    (let Z (shen-newpv V1510)
                                                     (let X&&
                                                      (shen-newpv V1510)
                                                      (do (shen-incinfs)
                                                       (cut Throwcontrol V1510
                                                        (freeze
                                                         (bind X&&
                                                          (shen-placeholder)
                                                          V1510
                                                          (freeze
                                                           (bind Z
                                                            (shen-ebr
                                                             (shen-lazyderef
                                                              X&& V1510)
                                                             (shen-lazyderef X
                                                              V1510)
                                                             (shen-lazyderef Y
                                                              V1510))
                                                            V1510
                                                            (freeze
                                                             (shen-th* Z B
                                                              (cons
                                                               (cons X&&
                                                                (cons :
                                                                 (cons A ())))
                                                               V1509)
                                                              V1510
                                                              V1511))))))))))
                                                    (do
                                                     (shen-unbindv V1452 V1510)
                                                     Result))))
                                                 false)))
                                              (do (shen-unbindv V1449 V1510)
                                               Result)))
                                            false)))
                                         (if (shen-pvar? V1448)
                                          (let B (shen-newpv V1510)
                                           (do
                                            (shen-bindv V1448
                                             (cons --> (cons B ())) V1510)
                                            (let Result
                                             (let Z (shen-newpv V1510)
                                              (let X&& (shen-newpv V1510)
                                               (do (shen-incinfs)
                                                (cut Throwcontrol V1510
                                                 (freeze
                                                  (bind X&& (shen-placeholder)
                                                   V1510
                                                   (freeze
                                                    (bind Z
                                                     (shen-ebr
                                                      (shen-lazyderef X&&
                                                       V1510)
                                                      (shen-lazyderef X V1510)
                                                      (shen-lazyderef Y V1510))
                                                     V1510
                                                     (freeze
                                                      (shen-th* Z B
                                                       (cons
                                                        (cons X&&
                                                         (cons :
                                                          (cons A ())))
                                                        V1509)
                                                       V1510 V1511))))))))))
                                             (do (shen-unbindv V1448 V1510)
                                              Result))))
                                          false))))
                                      (if (shen-pvar? V1447)
                                       (let A (shen-newpv V1510)
                                        (let B (shen-newpv V1510)
                                         (do
                                          (shen-bindv V1447
                                           (cons A (cons --> (cons B ())))
                                           V1510)
                                          (let Result
                                           (let Z (shen-newpv V1510)
                                            (let X&& (shen-newpv V1510)
                                             (do (shen-incinfs)
                                              (cut Throwcontrol V1510
                                               (freeze
                                                (bind X&& (shen-placeholder)
                                                 V1510
                                                 (freeze
                                                  (bind Z
                                                   (shen-ebr
                                                    (shen-lazyderef X&& V1510)
                                                    (shen-lazyderef X V1510)
                                                    (shen-lazyderef Y V1510))
                                                   V1510
                                                   (freeze
                                                    (shen-th* Z B
                                                     (cons
                                                      (cons X&&
                                                       (cons : (cons A ())))
                                                      V1509)
                                                     V1510 V1511))))))))))
                                           (do (shen-unbindv V1447 V1510)
                                            Result)))))
                                       false)))
                                    false)))
                                 false)))
                              false))
                            false))
                          false))
                        (if (= Case false)
                         (let Case
                          (let V1454 (shen-lazyderef V1507 V1510)
                           (if (cons? V1454)
                            (let V1455 (shen-lazyderef (hd V1454) V1510)
                             (if (= let V1455)
                              (let V1456 (shen-lazyderef (tl V1454) V1510)
                               (if (cons? V1456)
                                (let X (hd V1456)
                                 (let V1457 (shen-lazyderef (tl V1456) V1510)
                                  (if (cons? V1457)
                                   (let Y (hd V1457)
                                    (let V1458
                                     (shen-lazyderef (tl V1457) V1510)
                                     (if (cons? V1458)
                                      (let Z (hd V1458)
                                       (let V1459
                                        (shen-lazyderef (tl V1458) V1510)
                                        (if (= () V1459)
                                         (let W (shen-newpv V1510)
                                          (let X&& (shen-newpv V1510)
                                           (let B (shen-newpv V1510)
                                            (do (shen-incinfs)
                                             (cut Throwcontrol V1510
                                              (freeze
                                               (shen-th* Y B V1509 V1510
                                                (freeze
                                                 (bind X&& (shen-placeholder)
                                                  V1510
                                                  (freeze
                                                   (bind W
                                                    (shen-ebr
                                                     (shen-lazyderef X&& V1510)
                                                     (shen-lazyderef X V1510)
                                                     (shen-lazyderef Z V1510))
                                                    V1510
                                                    (freeze
                                                     (shen-th* W V1508
                                                      (cons
                                                       (cons X&&
                                                        (cons :
                                                         (cons B ())))
                                                       V1509)
                                                      V1510 V1511)))))))))))))
                                         false)))
                                      false)))
                                   false)))
                                false))
                              false))
                            false))
                          (if (= Case false)
                           (let Case
                            (let V1460 (shen-lazyderef V1507 V1510)
                             (if (cons? V1460)
                              (let V1461 (shen-lazyderef (hd V1460) V1510)
                               (if (= open V1461)
                                (let V1462 (shen-lazyderef (tl V1460) V1510)
                                 (if (cons? V1462)
                                  (let V1463 (shen-lazyderef (hd V1462) V1510)
                                   (if (= file V1463)
                                    (let V1464
                                     (shen-lazyderef (tl V1462) V1510)
                                     (if (cons? V1464)
                                      (let FileName (hd V1464)
                                       (let V1465
                                        (shen-lazyderef (tl V1464) V1510)
                                        (if (cons? V1465)
                                         (let Direction1393 (hd V1465)
                                          (let V1466
                                           (shen-lazyderef (tl V1465) V1510)
                                           (if (= () V1466)
                                            (let V1467
                                             (shen-lazyderef V1508 V1510)
                                             (if (cons? V1467)
                                              (let V1468
                                               (shen-lazyderef (hd V1467)
                                                V1510)
                                               (if (= stream V1468)
                                                (let V1469
                                                 (shen-lazyderef (tl V1467)
                                                  V1510)
                                                 (if (cons? V1469)
                                                  (let Direction (hd V1469)
                                                   (let V1470
                                                    (shen-lazyderef (tl V1469)
                                                     V1510)
                                                    (if (= () V1470)
                                                     (do (shen-incinfs)
                                                      (unify! Direction
                                                       Direction1393 V1510
                                                       (freeze
                                                        (cut Throwcontrol V1510
                                                         (freeze
                                                          (shen-th* FileName
                                                           string V1509 V1510
                                                           V1511))))))
                                                     (if (shen-pvar? V1470)
                                                      (do
                                                       (shen-bindv V1470 ()
                                                        V1510)
                                                       (let Result
                                                        (do (shen-incinfs)
                                                         (unify! Direction
                                                          Direction1393 V1510
                                                          (freeze
                                                           (cut Throwcontrol
                                                            V1510
                                                            (freeze
                                                             (shen-th* FileName
                                                              string V1509
                                                              V1510 V1511))))))
                                                        (do
                                                         (shen-unbindv V1470
                                                          V1510)
                                                         Result)))
                                                      false))))
                                                  (if (shen-pvar? V1469)
                                                   (let Direction
                                                    (shen-newpv V1510)
                                                    (do
                                                     (shen-bindv V1469
                                                      (cons Direction ())
                                                      V1510)
                                                     (let Result
                                                      (do (shen-incinfs)
                                                       (unify! Direction
                                                        Direction1393 V1510
                                                        (freeze
                                                         (cut Throwcontrol
                                                          V1510
                                                          (freeze
                                                           (shen-th* FileName
                                                            string V1509 V1510
                                                            V1511))))))
                                                      (do
                                                       (shen-unbindv V1469
                                                        V1510)
                                                       Result))))
                                                   false)))
                                                (if (shen-pvar? V1468)
                                                 (do
                                                  (shen-bindv V1468 stream
                                                   V1510)
                                                  (let Result
                                                   (let V1471
                                                    (shen-lazyderef (tl V1467)
                                                     V1510)
                                                    (if (cons? V1471)
                                                     (let Direction (hd V1471)
                                                      (let V1472
                                                       (shen-lazyderef
                                                        (tl V1471) V1510)
                                                       (if (= () V1472)
                                                        (do (shen-incinfs)
                                                         (unify! Direction
                                                          Direction1393 V1510
                                                          (freeze
                                                           (cut Throwcontrol
                                                            V1510
                                                            (freeze
                                                             (shen-th* FileName
                                                              string V1509
                                                              V1510 V1511))))))
                                                        (if (shen-pvar? V1472)
                                                         (do
                                                          (shen-bindv V1472 ()
                                                           V1510)
                                                          (let Result
                                                           (do (shen-incinfs)
                                                            (unify! Direction
                                                             Direction1393
                                                             V1510
                                                             (freeze
                                                              (cut Throwcontrol
                                                               V1510
                                                               (freeze
                                                                (shen-th*
                                                                 FileName
                                                                 string V1509
                                                                 V1510
                                                                 V1511))))))
                                                           (do
                                                            (shen-unbindv V1472
                                                             V1510)
                                                            Result)))
                                                         false))))
                                                     (if (shen-pvar? V1471)
                                                      (let Direction
                                                       (shen-newpv V1510)
                                                       (do
                                                        (shen-bindv V1471
                                                         (cons Direction ())
                                                         V1510)
                                                        (let Result
                                                         (do (shen-incinfs)
                                                          (unify! Direction
                                                           Direction1393 V1510
                                                           (freeze
                                                            (cut Throwcontrol
                                                             V1510
                                                             (freeze
                                                              (shen-th*
                                                               FileName string
                                                               V1509 V1510
                                                               V1511))))))
                                                         (do
                                                          (shen-unbindv V1471
                                                           V1510)
                                                          Result))))
                                                      false)))
                                                   (do
                                                    (shen-unbindv V1468 V1510)
                                                    Result)))
                                                 false)))
                                              (if (shen-pvar? V1467)
                                               (let Direction
                                                (shen-newpv V1510)
                                                (do
                                                 (shen-bindv V1467
                                                  (cons stream
                                                   (cons Direction ()))
                                                  V1510)
                                                 (let Result
                                                  (do (shen-incinfs)
                                                   (unify! Direction
                                                    Direction1393 V1510
                                                    (freeze
                                                     (cut Throwcontrol V1510
                                                      (freeze
                                                       (shen-th* FileName
                                                        string V1509 V1510
                                                        V1511))))))
                                                  (do
                                                   (shen-unbindv V1467 V1510)
                                                   Result))))
                                               false)))
                                            false)))
                                         false)))
                                      false))
                                    false))
                                  false))
                                false))
                              false))
                            (if (= Case false)
                             (let Case
                              (let V1473 (shen-lazyderef V1507 V1510)
                               (if (cons? V1473)
                                (let V1474 (shen-lazyderef (hd V1473) V1510)
                                 (if (= type V1474)
                                  (let V1475 (shen-lazyderef (tl V1473) V1510)
                                   (if (cons? V1475)
                                    (let X (hd V1475)
                                     (let V1476
                                      (shen-lazyderef (tl V1475) V1510)
                                      (if (cons? V1476)
                                       (let A (hd V1476)
                                        (let V1477
                                         (shen-lazyderef (tl V1476) V1510)
                                         (if (= () V1477)
                                          (do (shen-incinfs)
                                           (cut Throwcontrol V1510
                                            (freeze
                                             (unify A V1508 V1510
                                              (freeze
                                               (shen-th* X A V1509 V1510
                                                V1511))))))
                                          false)))
                                       false)))
                                    false))
                                  false))
                                false))
                              (if (= Case false)
                               (let Case
                                (let V1478 (shen-lazyderef V1507 V1510)
                                 (if (cons? V1478)
                                  (let V1479 (shen-lazyderef (hd V1478) V1510)
                                   (if (= input+ V1479)
                                    (let V1480
                                     (shen-lazyderef (tl V1478) V1510)
                                     (if (cons? V1480)
                                      (let V1481
                                       (shen-lazyderef (hd V1480) V1510)
                                       (if (= : V1481)
                                        (let V1482
                                         (shen-lazyderef (tl V1480) V1510)
                                         (if (cons? V1482)
                                          (let A (hd V1482)
                                           (let V1483
                                            (shen-lazyderef (tl V1482) V1510)
                                            (if (= () V1483)
                                             (let C (shen-newpv V1510)
                                              (do (shen-incinfs)
                                               (bind C
                                                (shen-normalise-type
                                                 (shen-lazyderef A V1510))
                                                V1510
                                                (freeze
                                                 (unify V1508 C V1510
                                                  V1511)))))
                                             false)))
                                          false))
                                        false))
                                      false))
                                    false))
                                  false))
                                (if (= Case false)
                                 (let Case
                                  (let V1484 (shen-lazyderef V1507 V1510)
                                   (if (cons? V1484)
                                    (let V1485
                                     (shen-lazyderef (hd V1484) V1510)
                                     (if (= where V1485)
                                      (let V1486
                                       (shen-lazyderef (tl V1484) V1510)
                                       (if (cons? V1486)
                                        (let P (hd V1486)
                                         (let V1487
                                          (shen-lazyderef (tl V1486) V1510)
                                          (if (cons? V1487)
                                           (let X (hd V1487)
                                            (let V1488
                                             (shen-lazyderef (tl V1487) V1510)
                                             (if (= () V1488)
                                              (do (shen-incinfs)
                                               (cut Throwcontrol V1510
                                                (freeze
                                                 (shen-th* P boolean V1509
                                                  V1510
                                                  (freeze
                                                   (cut Throwcontrol V1510
                                                    (freeze
                                                     (shen-th* X V1508
                                                      (cons
                                                       (cons P
                                                        (cons :
                                                         (cons verified ())))
                                                       V1509)
                                                      V1510 V1511))))))))
                                              false)))
                                           false)))
                                        false))
                                      false))
                                    false))
                                  (if (= Case false)
                                   (let Case
                                    (let V1489 (shen-lazyderef V1507 V1510)
                                     (if (cons? V1489)
                                      (let V1490
                                       (shen-lazyderef (hd V1489) V1510)
                                       (if (= set V1490)
                                        (let V1491
                                         (shen-lazyderef (tl V1489) V1510)
                                         (if (cons? V1491)
                                          (let Var (hd V1491)
                                           (let V1492
                                            (shen-lazyderef (tl V1491) V1510)
                                            (if (cons? V1492)
                                             (let Val (hd V1492)
                                              (let V1493
                                               (shen-lazyderef (tl V1492)
                                                V1510)
                                               (if (= () V1493)
                                                (do (shen-incinfs)
                                                 (cut Throwcontrol V1510
                                                  (freeze
                                                   (shen-th*
                                                    (cons value (cons Var ()))
                                                    V1508 V1509 V1510
                                                    (freeze
                                                     (shen-th* Val V1508 V1509
                                                      V1510 V1511))))))
                                                false)))
                                             false)))
                                          false))
                                        false))
                                      false))
                                    (if (= Case false)
                                     (let Case
                                      (let V1494 (shen-lazyderef V1507 V1510)
                                       (if (cons? V1494)
                                        (let V1495
                                         (shen-lazyderef (hd V1494) V1510)
                                         (if (= fail V1495)
                                          (let V1496
                                           (shen-lazyderef (tl V1494) V1510)
                                           (if (= () V1496)
                                            (let V1497
                                             (shen-lazyderef V1508 V1510)
                                             (if (= symbol V1497)
                                              (do (shen-incinfs) (thaw V1511))
                                              (if (shen-pvar? V1497)
                                               (do
                                                (shen-bindv V1497 symbol V1510)
                                                (let Result
                                                 (do (shen-incinfs)
                                                  (thaw V1511))
                                                 (do (shen-unbindv V1497 V1510)
                                                  Result)))
                                               false)))
                                            false))
                                          false))
                                        false))
                                      (if (= Case false)
                                       (let Case
                                        (let NewHyp (shen-newpv V1510)
                                         (do (shen-incinfs)
                                          (shen-t*-hyps V1509 NewHyp V1510
                                           (freeze
                                            (shen-th* V1507 V1508 NewHyp V1510
                                             V1511)))))
                                        (if (= Case false)
                                         (let Case
                                          (let V1498
                                           (shen-lazyderef V1507 V1510)
                                           (if (cons? V1498)
                                            (let V1499
                                             (shen-lazyderef (hd V1498) V1510)
                                             (if (= define V1499)
                                              (let V1500
                                               (shen-lazyderef (tl V1498)
                                                V1510)
                                               (if (cons? V1500)
                                                (let F (hd V1500)
                                                 (let X (tl V1500)
                                                  (do (shen-incinfs)
                                                   (cut Throwcontrol V1510
                                                    (freeze
                                                     (shen-t*-def
                                                      (cons define (cons F X))
                                                      V1508 V1509 V1510
                                                      V1511))))))
                                                false))
                                              false))
                                            false))
                                          (if (= Case false)
                                           (let Case
                                            (let V1501
                                             (shen-lazyderef V1507 V1510)
                                             (if (cons? V1501)
                                              (let V1502
                                               (shen-lazyderef (hd V1501)
                                                V1510)
                                               (if
                                                (= shen-process-datatype V1502)
                                                (let V1503
                                                 (shen-lazyderef V1508 V1510)
                                                 (if (= symbol V1503)
                                                  (do (shen-incinfs)
                                                   (thaw V1511))
                                                  (if (shen-pvar? V1503)
                                                   (do
                                                    (shen-bindv V1503 symbol
                                                     V1510)
                                                    (let Result
                                                     (do (shen-incinfs)
                                                      (thaw V1511))
                                                     (do
                                                      (shen-unbindv V1503
                                                       V1510)
                                                      Result)))
                                                   false)))
                                                false))
                                              false))
                                            (if (= Case false)
                                             (let Case
                                              (let V1504
                                               (shen-lazyderef V1507 V1510)
                                               (if (cons? V1504)
                                                (let V1505
                                                 (shen-lazyderef (hd V1504)
                                                  V1510)
                                                 (if
                                                  (= shen-synonyms-help V1505)
                                                  (let V1506
                                                   (shen-lazyderef V1508 V1510)
                                                   (if (= symbol V1506)
                                                    (do (shen-incinfs)
                                                     (thaw V1511))
                                                    (if (shen-pvar? V1506)
                                                     (do
                                                      (shen-bindv V1506 symbol
                                                       V1510)
                                                      (let Result
                                                       (do (shen-incinfs)
                                                        (thaw V1511))
                                                       (do
                                                        (shen-unbindv V1506
                                                         V1510)
                                                        Result)))
                                                     false)))
                                                  false))
                                                false))
                                              (if (= Case false)
                                               (let Datatypes
                                                (shen-newpv V1510)
                                                (do (shen-incinfs)
                                                 (bind Datatypes
                                                  (value shen-*datatypes*)
                                                  V1510
                                                  (freeze
                                                   (shen-udefs*
                                                    (cons V1507
                                                     (cons :
                                                      (cons V1508 ())))
                                                    V1509 Datatypes V1510
                                                    V1511)))))
                                               Case))
                                             Case))
                                           Case))
                                         Case))
                                       Case))
                                     Case))
                                   Case))
                                 Case))
                               Case))
                             Case))
                           Case))
                         Case))
                       Case))
                     Case))
                   Case))
                 Case))
               Case))
             Case))
           Case))
         Case))
       Case))
     Case)))))

(defun shen-t*-hyps (V783 V784 V785 V786)
 (let Case
  (let V549 (shen-lazyderef V783 V785)
   (if (cons? V549)
    (let V550 (shen-lazyderef (hd V549) V785)
     (if (cons? V550)
      (let V551 (shen-lazyderef (hd V550) V785)
       (if (cons? V551)
        (let V552 (shen-lazyderef (hd V551) V785)
         (if (= cons V552)
          (let V553 (shen-lazyderef (tl V551) V785)
           (if (cons? V553)
            (let X (hd V553)
             (let V554 (shen-lazyderef (tl V553) V785)
              (if (cons? V554)
               (let Y (hd V554)
                (let V555 (shen-lazyderef (tl V554) V785)
                 (if (= () V555)
                  (let V556 (shen-lazyderef (tl V550) V785)
                   (if (cons? V556)
                    (let V557 (shen-lazyderef (hd V556) V785)
                     (if (= : V557)
                      (let V558 (shen-lazyderef (tl V556) V785)
                       (if (cons? V558)
                        (let V559 (shen-lazyderef (hd V558) V785)
                         (if (cons? V559)
                          (let V560 (shen-lazyderef (hd V559) V785)
                           (if (= list V560)
                            (let V561 (shen-lazyderef (tl V559) V785)
                             (if (cons? V561)
                              (let A (hd V561)
                               (let V562 (shen-lazyderef (tl V561) V785)
                                (if (= () V562)
                                 (let V563 (shen-lazyderef (tl V558) V785)
                                  (if (= () V563)
                                   (let Hyp (tl V549)
                                    (do (shen-incinfs)
                                     (bind V784
                                      (cons
                                       (cons (shen-lazyderef X V785)
                                        (cons :
                                         (cons (shen-lazyderef A V785) ())))
                                       (cons
                                        (cons (shen-lazyderef Y V785)
                                         (cons :
                                          (cons
                                           (cons list
                                            (cons (shen-lazyderef A V785) ()))
                                           ())))
                                        (shen-lazyderef Hyp V785)))
                                      V785 V786)))
                                   (if (shen-pvar? V563)
                                    (do (shen-bindv V563 () V785)
                                     (let Result
                                      (let Hyp (tl V549)
                                       (do (shen-incinfs)
                                        (bind V784
                                         (cons
                                          (cons (shen-lazyderef X V785)
                                           (cons :
                                            (cons (shen-lazyderef A V785)
                                             ())))
                                          (cons
                                           (cons (shen-lazyderef Y V785)
                                            (cons :
                                             (cons
                                              (cons list
                                               (cons (shen-lazyderef A V785)
                                                ()))
                                              ())))
                                           (shen-lazyderef Hyp V785)))
                                         V785 V786)))
                                      (do (shen-unbindv V563 V785) Result)))
                                    false)))
                                 (if (shen-pvar? V562)
                                  (do (shen-bindv V562 () V785)
                                   (let Result
                                    (let V564 (shen-lazyderef (tl V558) V785)
                                     (if (= () V564)
                                      (let Hyp (tl V549)
                                       (do (shen-incinfs)
                                        (bind V784
                                         (cons
                                          (cons (shen-lazyderef X V785)
                                           (cons :
                                            (cons (shen-lazyderef A V785)
                                             ())))
                                          (cons
                                           (cons (shen-lazyderef Y V785)
                                            (cons :
                                             (cons
                                              (cons list
                                               (cons (shen-lazyderef A V785)
                                                ()))
                                              ())))
                                           (shen-lazyderef Hyp V785)))
                                         V785 V786)))
                                      (if (shen-pvar? V564)
                                       (do (shen-bindv V564 () V785)
                                        (let Result
                                         (let Hyp (tl V549)
                                          (do (shen-incinfs)
                                           (bind V784
                                            (cons
                                             (cons (shen-lazyderef X V785)
                                              (cons :
                                               (cons (shen-lazyderef A V785)
                                                ())))
                                             (cons
                                              (cons (shen-lazyderef Y V785)
                                               (cons :
                                                (cons
                                                 (cons list
                                                  (cons (shen-lazyderef A V785)
                                                   ()))
                                                 ())))
                                              (shen-lazyderef Hyp V785)))
                                            V785 V786)))
                                         (do (shen-unbindv V564 V785) Result)))
                                       false)))
                                    (do (shen-unbindv V562 V785) Result)))
                                  false))))
                              (if (shen-pvar? V561)
                               (let A (shen-newpv V785)
                                (do (shen-bindv V561 (cons A ()) V785)
                                 (let Result
                                  (let V565 (shen-lazyderef (tl V558) V785)
                                   (if (= () V565)
                                    (let Hyp (tl V549)
                                     (do (shen-incinfs)
                                      (bind V784
                                       (cons
                                        (cons (shen-lazyderef X V785)
                                         (cons :
                                          (cons (shen-lazyderef A V785) ())))
                                        (cons
                                         (cons (shen-lazyderef Y V785)
                                          (cons :
                                           (cons
                                            (cons list
                                             (cons (shen-lazyderef A V785)
                                              ()))
                                            ())))
                                         (shen-lazyderef Hyp V785)))
                                       V785 V786)))
                                    (if (shen-pvar? V565)
                                     (do (shen-bindv V565 () V785)
                                      (let Result
                                       (let Hyp (tl V549)
                                        (do (shen-incinfs)
                                         (bind V784
                                          (cons
                                           (cons (shen-lazyderef X V785)
                                            (cons :
                                             (cons (shen-lazyderef A V785)
                                              ())))
                                           (cons
                                            (cons (shen-lazyderef Y V785)
                                             (cons :
                                              (cons
                                               (cons list
                                                (cons (shen-lazyderef A V785)
                                                 ()))
                                               ())))
                                            (shen-lazyderef Hyp V785)))
                                          V785 V786)))
                                       (do (shen-unbindv V565 V785) Result)))
                                     false)))
                                  (do (shen-unbindv V561 V785) Result))))
                               false)))
                            (if (shen-pvar? V560)
                             (do (shen-bindv V560 list V785)
                              (let Result
                               (let V566 (shen-lazyderef (tl V559) V785)
                                (if (cons? V566)
                                 (let A (hd V566)
                                  (let V567 (shen-lazyderef (tl V566) V785)
                                   (if (= () V567)
                                    (let V568 (shen-lazyderef (tl V558) V785)
                                     (if (= () V568)
                                      (let Hyp (tl V549)
                                       (do (shen-incinfs)
                                        (bind V784
                                         (cons
                                          (cons (shen-lazyderef X V785)
                                           (cons :
                                            (cons (shen-lazyderef A V785)
                                             ())))
                                          (cons
                                           (cons (shen-lazyderef Y V785)
                                            (cons :
                                             (cons
                                              (cons list
                                               (cons (shen-lazyderef A V785)
                                                ()))
                                              ())))
                                           (shen-lazyderef Hyp V785)))
                                         V785 V786)))
                                      (if (shen-pvar? V568)
                                       (do (shen-bindv V568 () V785)
                                        (let Result
                                         (let Hyp (tl V549)
                                          (do (shen-incinfs)
                                           (bind V784
                                            (cons
                                             (cons (shen-lazyderef X V785)
                                              (cons :
                                               (cons (shen-lazyderef A V785)
                                                ())))
                                             (cons
                                              (cons (shen-lazyderef Y V785)
                                               (cons :
                                                (cons
                                                 (cons list
                                                  (cons (shen-lazyderef A V785)
                                                   ()))
                                                 ())))
                                              (shen-lazyderef Hyp V785)))
                                            V785 V786)))
                                         (do (shen-unbindv V568 V785) Result)))
                                       false)))
                                    (if (shen-pvar? V567)
                                     (do (shen-bindv V567 () V785)
                                      (let Result
                                       (let V569
                                        (shen-lazyderef (tl V558) V785)
                                        (if (= () V569)
                                         (let Hyp (tl V549)
                                          (do (shen-incinfs)
                                           (bind V784
                                            (cons
                                             (cons (shen-lazyderef X V785)
                                              (cons :
                                               (cons (shen-lazyderef A V785)
                                                ())))
                                             (cons
                                              (cons (shen-lazyderef Y V785)
                                               (cons :
                                                (cons
                                                 (cons list
                                                  (cons (shen-lazyderef A V785)
                                                   ()))
                                                 ())))
                                              (shen-lazyderef Hyp V785)))
                                            V785 V786)))
                                         (if (shen-pvar? V569)
                                          (do (shen-bindv V569 () V785)
                                           (let Result
                                            (let Hyp (tl V549)
                                             (do (shen-incinfs)
                                              (bind V784
                                               (cons
                                                (cons (shen-lazyderef X V785)
                                                 (cons :
                                                  (cons (shen-lazyderef A V785)
                                                   ())))
                                                (cons
                                                 (cons (shen-lazyderef Y V785)
                                                  (cons :
                                                   (cons
                                                    (cons list
                                                     (cons
                                                      (shen-lazyderef A V785)
                                                      ()))
                                                    ())))
                                                 (shen-lazyderef Hyp V785)))
                                               V785 V786)))
                                            (do (shen-unbindv V569 V785)
                                             Result)))
                                          false)))
                                       (do (shen-unbindv V567 V785) Result)))
                                     false))))
                                 (if (shen-pvar? V566)
                                  (let A (shen-newpv V785)
                                   (do (shen-bindv V566 (cons A ()) V785)
                                    (let Result
                                     (let V570 (shen-lazyderef (tl V558) V785)
                                      (if (= () V570)
                                       (let Hyp (tl V549)
                                        (do (shen-incinfs)
                                         (bind V784
                                          (cons
                                           (cons (shen-lazyderef X V785)
                                            (cons :
                                             (cons (shen-lazyderef A V785)
                                              ())))
                                           (cons
                                            (cons (shen-lazyderef Y V785)
                                             (cons :
                                              (cons
                                               (cons list
                                                (cons (shen-lazyderef A V785)
                                                 ()))
                                               ())))
                                            (shen-lazyderef Hyp V785)))
                                          V785 V786)))
                                       (if (shen-pvar? V570)
                                        (do (shen-bindv V570 () V785)
                                         (let Result
                                          (let Hyp (tl V549)
                                           (do (shen-incinfs)
                                            (bind V784
                                             (cons
                                              (cons (shen-lazyderef X V785)
                                               (cons :
                                                (cons (shen-lazyderef A V785)
                                                 ())))
                                              (cons
                                               (cons (shen-lazyderef Y V785)
                                                (cons :
                                                 (cons
                                                  (cons list
                                                   (cons
                                                    (shen-lazyderef A V785)
                                                    ()))
                                                  ())))
                                               (shen-lazyderef Hyp V785)))
                                             V785 V786)))
                                          (do (shen-unbindv V570 V785)
                                           Result)))
                                        false)))
                                     (do (shen-unbindv V566 V785) Result))))
                                  false)))
                               (do (shen-unbindv V560 V785) Result)))
                             false)))
                          (if (shen-pvar? V559)
                           (let A (shen-newpv V785)
                            (do (shen-bindv V559 (cons list (cons A ())) V785)
                             (let Result
                              (let V571 (shen-lazyderef (tl V558) V785)
                               (if (= () V571)
                                (let Hyp (tl V549)
                                 (do (shen-incinfs)
                                  (bind V784
                                   (cons
                                    (cons (shen-lazyderef X V785)
                                     (cons :
                                      (cons (shen-lazyderef A V785) ())))
                                    (cons
                                     (cons (shen-lazyderef Y V785)
                                      (cons :
                                       (cons
                                        (cons list
                                         (cons (shen-lazyderef A V785) ()))
                                        ())))
                                     (shen-lazyderef Hyp V785)))
                                   V785 V786)))
                                (if (shen-pvar? V571)
                                 (do (shen-bindv V571 () V785)
                                  (let Result
                                   (let Hyp (tl V549)
                                    (do (shen-incinfs)
                                     (bind V784
                                      (cons
                                       (cons (shen-lazyderef X V785)
                                        (cons :
                                         (cons (shen-lazyderef A V785) ())))
                                       (cons
                                        (cons (shen-lazyderef Y V785)
                                         (cons :
                                          (cons
                                           (cons list
                                            (cons (shen-lazyderef A V785) ()))
                                           ())))
                                        (shen-lazyderef Hyp V785)))
                                      V785 V786)))
                                   (do (shen-unbindv V571 V785) Result)))
                                 false)))
                              (do (shen-unbindv V559 V785) Result))))
                           false)))
                        false))
                      false))
                    false))
                  false)))
               false)))
            false))
          false))
        false))
      false))
    false))
  (if (= Case false)
   (let Case
    (let V572 (shen-lazyderef V783 V785)
     (if (cons? V572)
      (let V573 (shen-lazyderef (hd V572) V785)
       (if (cons? V573)
        (let V574 (shen-lazyderef (hd V573) V785)
         (if (cons? V574)
          (let V575 (shen-lazyderef (hd V574) V785)
           (if (= @p V575)
            (let V576 (shen-lazyderef (tl V574) V785)
             (if (cons? V576)
              (let X (hd V576)
               (let V577 (shen-lazyderef (tl V576) V785)
                (if (cons? V577)
                 (let Y (hd V577)
                  (let V578 (shen-lazyderef (tl V577) V785)
                   (if (= () V578)
                    (let V579 (shen-lazyderef (tl V573) V785)
                     (if (cons? V579)
                      (let V580 (shen-lazyderef (hd V579) V785)
                       (if (= : V580)
                        (let V581 (shen-lazyderef (tl V579) V785)
                         (if (cons? V581)
                          (let V582 (shen-lazyderef (hd V581) V785)
                           (if (cons? V582)
                            (let A (hd V582)
                             (let V583 (shen-lazyderef (tl V582) V785)
                              (if (cons? V583)
                               (let V584 (shen-lazyderef (hd V583) V785)
                                (if (= * V584)
                                 (let V585 (shen-lazyderef (tl V583) V785)
                                  (if (cons? V585)
                                   (let B (hd V585)
                                    (let V586 (shen-lazyderef (tl V585) V785)
                                     (if (= () V586)
                                      (let V587 (shen-lazyderef (tl V581) V785)
                                       (if (= () V587)
                                        (let Hyp (tl V572)
                                         (do (shen-incinfs)
                                          (bind V784
                                           (cons
                                            (cons (shen-lazyderef X V785)
                                             (cons :
                                              (cons (shen-lazyderef A V785)
                                               ())))
                                            (cons
                                             (cons (shen-lazyderef Y V785)
                                              (cons :
                                               (cons (shen-lazyderef B V785)
                                                ())))
                                             (shen-lazyderef Hyp V785)))
                                           V785 V786)))
                                        (if (shen-pvar? V587)
                                         (do (shen-bindv V587 () V785)
                                          (let Result
                                           (let Hyp (tl V572)
                                            (do (shen-incinfs)
                                             (bind V784
                                              (cons
                                               (cons (shen-lazyderef X V785)
                                                (cons :
                                                 (cons (shen-lazyderef A V785)
                                                  ())))
                                               (cons
                                                (cons (shen-lazyderef Y V785)
                                                 (cons :
                                                  (cons (shen-lazyderef B V785)
                                                   ())))
                                                (shen-lazyderef Hyp V785)))
                                              V785 V786)))
                                           (do (shen-unbindv V587 V785)
                                            Result)))
                                         false)))
                                      (if (shen-pvar? V586)
                                       (do (shen-bindv V586 () V785)
                                        (let Result
                                         (let V588
                                          (shen-lazyderef (tl V581) V785)
                                          (if (= () V588)
                                           (let Hyp (tl V572)
                                            (do (shen-incinfs)
                                             (bind V784
                                              (cons
                                               (cons (shen-lazyderef X V785)
                                                (cons :
                                                 (cons (shen-lazyderef A V785)
                                                  ())))
                                               (cons
                                                (cons (shen-lazyderef Y V785)
                                                 (cons :
                                                  (cons (shen-lazyderef B V785)
                                                   ())))
                                                (shen-lazyderef Hyp V785)))
                                              V785 V786)))
                                           (if (shen-pvar? V588)
                                            (do (shen-bindv V588 () V785)
                                             (let Result
                                              (let Hyp (tl V572)
                                               (do (shen-incinfs)
                                                (bind V784
                                                 (cons
                                                  (cons (shen-lazyderef X V785)
                                                   (cons :
                                                    (cons
                                                     (shen-lazyderef A V785)
                                                     ())))
                                                  (cons
                                                   (cons
                                                    (shen-lazyderef Y V785)
                                                    (cons :
                                                     (cons
                                                      (shen-lazyderef B V785)
                                                      ())))
                                                   (shen-lazyderef Hyp V785)))
                                                 V785 V786)))
                                              (do (shen-unbindv V588 V785)
                                               Result)))
                                            false)))
                                         (do (shen-unbindv V586 V785) Result)))
                                       false))))
                                   (if (shen-pvar? V585)
                                    (let B (shen-newpv V785)
                                     (do (shen-bindv V585 (cons B ()) V785)
                                      (let Result
                                       (let V589
                                        (shen-lazyderef (tl V581) V785)
                                        (if (= () V589)
                                         (let Hyp (tl V572)
                                          (do (shen-incinfs)
                                           (bind V784
                                            (cons
                                             (cons (shen-lazyderef X V785)
                                              (cons :
                                               (cons (shen-lazyderef A V785)
                                                ())))
                                             (cons
                                              (cons (shen-lazyderef Y V785)
                                               (cons :
                                                (cons (shen-lazyderef B V785)
                                                 ())))
                                              (shen-lazyderef Hyp V785)))
                                            V785 V786)))
                                         (if (shen-pvar? V589)
                                          (do (shen-bindv V589 () V785)
                                           (let Result
                                            (let Hyp (tl V572)
                                             (do (shen-incinfs)
                                              (bind V784
                                               (cons
                                                (cons (shen-lazyderef X V785)
                                                 (cons :
                                                  (cons (shen-lazyderef A V785)
                                                   ())))
                                                (cons
                                                 (cons (shen-lazyderef Y V785)
                                                  (cons :
                                                   (cons
                                                    (shen-lazyderef B V785)
                                                    ())))
                                                 (shen-lazyderef Hyp V785)))
                                               V785 V786)))
                                            (do (shen-unbindv V589 V785)
                                             Result)))
                                          false)))
                                       (do (shen-unbindv V585 V785) Result))))
                                    false)))
                                 (if (shen-pvar? V584)
                                  (do (shen-bindv V584 * V785)
                                   (let Result
                                    (let V590 (shen-lazyderef (tl V583) V785)
                                     (if (cons? V590)
                                      (let B (hd V590)
                                       (let V591
                                        (shen-lazyderef (tl V590) V785)
                                        (if (= () V591)
                                         (let V592
                                          (shen-lazyderef (tl V581) V785)
                                          (if (= () V592)
                                           (let Hyp (tl V572)
                                            (do (shen-incinfs)
                                             (bind V784
                                              (cons
                                               (cons (shen-lazyderef X V785)
                                                (cons :
                                                 (cons (shen-lazyderef A V785)
                                                  ())))
                                               (cons
                                                (cons (shen-lazyderef Y V785)
                                                 (cons :
                                                  (cons (shen-lazyderef B V785)
                                                   ())))
                                                (shen-lazyderef Hyp V785)))
                                              V785 V786)))
                                           (if (shen-pvar? V592)
                                            (do (shen-bindv V592 () V785)
                                             (let Result
                                              (let Hyp (tl V572)
                                               (do (shen-incinfs)
                                                (bind V784
                                                 (cons
                                                  (cons (shen-lazyderef X V785)
                                                   (cons :
                                                    (cons
                                                     (shen-lazyderef A V785)
                                                     ())))
                                                  (cons
                                                   (cons
                                                    (shen-lazyderef Y V785)
                                                    (cons :
                                                     (cons
                                                      (shen-lazyderef B V785)
                                                      ())))
                                                   (shen-lazyderef Hyp V785)))
                                                 V785 V786)))
                                              (do (shen-unbindv V592 V785)
                                               Result)))
                                            false)))
                                         (if (shen-pvar? V591)
                                          (do (shen-bindv V591 () V785)
                                           (let Result
                                            (let V593
                                             (shen-lazyderef (tl V581) V785)
                                             (if (= () V593)
                                              (let Hyp (tl V572)
                                               (do (shen-incinfs)
                                                (bind V784
                                                 (cons
                                                  (cons (shen-lazyderef X V785)
                                                   (cons :
                                                    (cons
                                                     (shen-lazyderef A V785)
                                                     ())))
                                                  (cons
                                                   (cons
                                                    (shen-lazyderef Y V785)
                                                    (cons :
                                                     (cons
                                                      (shen-lazyderef B V785)
                                                      ())))
                                                   (shen-lazyderef Hyp V785)))
                                                 V785 V786)))
                                              (if (shen-pvar? V593)
                                               (do (shen-bindv V593 () V785)
                                                (let Result
                                                 (let Hyp (tl V572)
                                                  (do (shen-incinfs)
                                                   (bind V784
                                                    (cons
                                                     (cons
                                                      (shen-lazyderef X V785)
                                                      (cons :
                                                       (cons
                                                        (shen-lazyderef A V785)
                                                        ())))
                                                     (cons
                                                      (cons
                                                       (shen-lazyderef Y V785)
                                                       (cons :
                                                        (cons
                                                         (shen-lazyderef B
                                                          V785)
                                                         ())))
                                                      (shen-lazyderef Hyp
                                                       V785)))
                                                    V785 V786)))
                                                 (do (shen-unbindv V593 V785)
                                                  Result)))
                                               false)))
                                            (do (shen-unbindv V591 V785)
                                             Result)))
                                          false))))
                                      (if (shen-pvar? V590)
                                       (let B (shen-newpv V785)
                                        (do (shen-bindv V590 (cons B ()) V785)
                                         (let Result
                                          (let V594
                                           (shen-lazyderef (tl V581) V785)
                                           (if (= () V594)
                                            (let Hyp (tl V572)
                                             (do (shen-incinfs)
                                              (bind V784
                                               (cons
                                                (cons (shen-lazyderef X V785)
                                                 (cons :
                                                  (cons (shen-lazyderef A V785)
                                                   ())))
                                                (cons
                                                 (cons (shen-lazyderef Y V785)
                                                  (cons :
                                                   (cons
                                                    (shen-lazyderef B V785)
                                                    ())))
                                                 (shen-lazyderef Hyp V785)))
                                               V785 V786)))
                                            (if (shen-pvar? V594)
                                             (do (shen-bindv V594 () V785)
                                              (let Result
                                               (let Hyp (tl V572)
                                                (do (shen-incinfs)
                                                 (bind V784
                                                  (cons
                                                   (cons
                                                    (shen-lazyderef X V785)
                                                    (cons :
                                                     (cons
                                                      (shen-lazyderef A V785)
                                                      ())))
                                                   (cons
                                                    (cons
                                                     (shen-lazyderef Y V785)
                                                     (cons :
                                                      (cons
                                                       (shen-lazyderef B V785)
                                                       ())))
                                                    (shen-lazyderef Hyp V785)))
                                                  V785 V786)))
                                               (do (shen-unbindv V594 V785)
                                                Result)))
                                             false)))
                                          (do (shen-unbindv V590 V785)
                                           Result))))
                                       false)))
                                    (do (shen-unbindv V584 V785) Result)))
                                  false)))
                               (if (shen-pvar? V583)
                                (let B (shen-newpv V785)
                                 (do
                                  (shen-bindv V583 (cons * (cons B ())) V785)
                                  (let Result
                                   (let V595 (shen-lazyderef (tl V581) V785)
                                    (if (= () V595)
                                     (let Hyp (tl V572)
                                      (do (shen-incinfs)
                                       (bind V784
                                        (cons
                                         (cons (shen-lazyderef X V785)
                                          (cons :
                                           (cons (shen-lazyderef A V785) ())))
                                         (cons
                                          (cons (shen-lazyderef Y V785)
                                           (cons :
                                            (cons (shen-lazyderef B V785)
                                             ())))
                                          (shen-lazyderef Hyp V785)))
                                        V785 V786)))
                                     (if (shen-pvar? V595)
                                      (do (shen-bindv V595 () V785)
                                       (let Result
                                        (let Hyp (tl V572)
                                         (do (shen-incinfs)
                                          (bind V784
                                           (cons
                                            (cons (shen-lazyderef X V785)
                                             (cons :
                                              (cons (shen-lazyderef A V785)
                                               ())))
                                            (cons
                                             (cons (shen-lazyderef Y V785)
                                              (cons :
                                               (cons (shen-lazyderef B V785)
                                                ())))
                                             (shen-lazyderef Hyp V785)))
                                           V785 V786)))
                                        (do (shen-unbindv V595 V785) Result)))
                                      false)))
                                   (do (shen-unbindv V583 V785) Result))))
                                false))))
                            (if (shen-pvar? V582)
                             (let A (shen-newpv V785)
                              (let B (shen-newpv V785)
                               (do
                                (shen-bindv V582 (cons A (cons * (cons B ())))
                                 V785)
                                (let Result
                                 (let V596 (shen-lazyderef (tl V581) V785)
                                  (if (= () V596)
                                   (let Hyp (tl V572)
                                    (do (shen-incinfs)
                                     (bind V784
                                      (cons
                                       (cons (shen-lazyderef X V785)
                                        (cons :
                                         (cons (shen-lazyderef A V785) ())))
                                       (cons
                                        (cons (shen-lazyderef Y V785)
                                         (cons :
                                          (cons (shen-lazyderef B V785) ())))
                                        (shen-lazyderef Hyp V785)))
                                      V785 V786)))
                                   (if (shen-pvar? V596)
                                    (do (shen-bindv V596 () V785)
                                     (let Result
                                      (let Hyp (tl V572)
                                       (do (shen-incinfs)
                                        (bind V784
                                         (cons
                                          (cons (shen-lazyderef X V785)
                                           (cons :
                                            (cons (shen-lazyderef A V785)
                                             ())))
                                          (cons
                                           (cons (shen-lazyderef Y V785)
                                            (cons :
                                             (cons (shen-lazyderef B V785)
                                              ())))
                                           (shen-lazyderef Hyp V785)))
                                         V785 V786)))
                                      (do (shen-unbindv V596 V785) Result)))
                                    false)))
                                 (do (shen-unbindv V582 V785) Result)))))
                             false)))
                          false))
                        false))
                      false))
                    false)))
                 false)))
              false))
            false))
          false))
        false))
      false))
    (if (= Case false)
     (let Case
      (let V597 (shen-lazyderef V783 V785)
       (if (cons? V597)
        (let V598 (shen-lazyderef (hd V597) V785)
         (if (cons? V598)
          (let V599 (shen-lazyderef (hd V598) V785)
           (if (cons? V599)
            (let V600 (shen-lazyderef (hd V599) V785)
             (if (= @v V600)
              (let V601 (shen-lazyderef (tl V599) V785)
               (if (cons? V601)
                (let X (hd V601)
                 (let V602 (shen-lazyderef (tl V601) V785)
                  (if (cons? V602)
                   (let Y (hd V602)
                    (let V603 (shen-lazyderef (tl V602) V785)
                     (if (= () V603)
                      (let V604 (shen-lazyderef (tl V598) V785)
                       (if (cons? V604)
                        (let V605 (shen-lazyderef (hd V604) V785)
                         (if (= : V605)
                          (let V606 (shen-lazyderef (tl V604) V785)
                           (if (cons? V606)
                            (let V607 (shen-lazyderef (hd V606) V785)
                             (if (cons? V607)
                              (let V608 (shen-lazyderef (hd V607) V785)
                               (if (= vector V608)
                                (let V609 (shen-lazyderef (tl V607) V785)
                                 (if (cons? V609)
                                  (let A (hd V609)
                                   (let V610 (shen-lazyderef (tl V609) V785)
                                    (if (= () V610)
                                     (let V611 (shen-lazyderef (tl V606) V785)
                                      (if (= () V611)
                                       (let Hyp (tl V597)
                                        (do (shen-incinfs)
                                         (bind V784
                                          (cons
                                           (cons (shen-lazyderef X V785)
                                            (cons :
                                             (cons (shen-lazyderef A V785)
                                              ())))
                                           (cons
                                            (cons (shen-lazyderef Y V785)
                                             (cons :
                                              (cons
                                               (cons vector
                                                (cons (shen-lazyderef A V785)
                                                 ()))
                                               ())))
                                            (shen-lazyderef Hyp V785)))
                                          V785 V786)))
                                       (if (shen-pvar? V611)
                                        (do (shen-bindv V611 () V785)
                                         (let Result
                                          (let Hyp (tl V597)
                                           (do (shen-incinfs)
                                            (bind V784
                                             (cons
                                              (cons (shen-lazyderef X V785)
                                               (cons :
                                                (cons (shen-lazyderef A V785)
                                                 ())))
                                              (cons
                                               (cons (shen-lazyderef Y V785)
                                                (cons :
                                                 (cons
                                                  (cons vector
                                                   (cons
                                                    (shen-lazyderef A V785)
                                                    ()))
                                                  ())))
                                               (shen-lazyderef Hyp V785)))
                                             V785 V786)))
                                          (do (shen-unbindv V611 V785)
                                           Result)))
                                        false)))
                                     (if (shen-pvar? V610)
                                      (do (shen-bindv V610 () V785)
                                       (let Result
                                        (let V612
                                         (shen-lazyderef (tl V606) V785)
                                         (if (= () V612)
                                          (let Hyp (tl V597)
                                           (do (shen-incinfs)
                                            (bind V784
                                             (cons
                                              (cons (shen-lazyderef X V785)
                                               (cons :
                                                (cons (shen-lazyderef A V785)
                                                 ())))
                                              (cons
                                               (cons (shen-lazyderef Y V785)
                                                (cons :
                                                 (cons
                                                  (cons vector
                                                   (cons
                                                    (shen-lazyderef A V785)
                                                    ()))
                                                  ())))
                                               (shen-lazyderef Hyp V785)))
                                             V785 V786)))
                                          (if (shen-pvar? V612)
                                           (do (shen-bindv V612 () V785)
                                            (let Result
                                             (let Hyp (tl V597)
                                              (do (shen-incinfs)
                                               (bind V784
                                                (cons
                                                 (cons (shen-lazyderef X V785)
                                                  (cons :
                                                   (cons
                                                    (shen-lazyderef A V785)
                                                    ())))
                                                 (cons
                                                  (cons (shen-lazyderef Y V785)
                                                   (cons :
                                                    (cons
                                                     (cons vector
                                                      (cons
                                                       (shen-lazyderef A V785)
                                                       ()))
                                                     ())))
                                                  (shen-lazyderef Hyp V785)))
                                                V785 V786)))
                                             (do (shen-unbindv V612 V785)
                                              Result)))
                                           false)))
                                        (do (shen-unbindv V610 V785) Result)))
                                      false))))
                                  (if (shen-pvar? V609)
                                   (let A (shen-newpv V785)
                                    (do (shen-bindv V609 (cons A ()) V785)
                                     (let Result
                                      (let V613 (shen-lazyderef (tl V606) V785)
                                       (if (= () V613)
                                        (let Hyp (tl V597)
                                         (do (shen-incinfs)
                                          (bind V784
                                           (cons
                                            (cons (shen-lazyderef X V785)
                                             (cons :
                                              (cons (shen-lazyderef A V785)
                                               ())))
                                            (cons
                                             (cons (shen-lazyderef Y V785)
                                              (cons :
                                               (cons
                                                (cons vector
                                                 (cons (shen-lazyderef A V785)
                                                  ()))
                                                ())))
                                             (shen-lazyderef Hyp V785)))
                                           V785 V786)))
                                        (if (shen-pvar? V613)
                                         (do (shen-bindv V613 () V785)
                                          (let Result
                                           (let Hyp (tl V597)
                                            (do (shen-incinfs)
                                             (bind V784
                                              (cons
                                               (cons (shen-lazyderef X V785)
                                                (cons :
                                                 (cons (shen-lazyderef A V785)
                                                  ())))
                                               (cons
                                                (cons (shen-lazyderef Y V785)
                                                 (cons :
                                                  (cons
                                                   (cons vector
                                                    (cons
                                                     (shen-lazyderef A V785)
                                                     ()))
                                                   ())))
                                                (shen-lazyderef Hyp V785)))
                                              V785 V786)))
                                           (do (shen-unbindv V613 V785)
                                            Result)))
                                         false)))
                                      (do (shen-unbindv V609 V785) Result))))
                                   false)))
                                (if (shen-pvar? V608)
                                 (do (shen-bindv V608 vector V785)
                                  (let Result
                                   (let V614 (shen-lazyderef (tl V607) V785)
                                    (if (cons? V614)
                                     (let A (hd V614)
                                      (let V615 (shen-lazyderef (tl V614) V785)
                                       (if (= () V615)
                                        (let V616
                                         (shen-lazyderef (tl V606) V785)
                                         (if (= () V616)
                                          (let Hyp (tl V597)
                                           (do (shen-incinfs)
                                            (bind V784
                                             (cons
                                              (cons (shen-lazyderef X V785)
                                               (cons :
                                                (cons (shen-lazyderef A V785)
                                                 ())))
                                              (cons
                                               (cons (shen-lazyderef Y V785)
                                                (cons :
                                                 (cons
                                                  (cons vector
                                                   (cons
                                                    (shen-lazyderef A V785)
                                                    ()))
                                                  ())))
                                               (shen-lazyderef Hyp V785)))
                                             V785 V786)))
                                          (if (shen-pvar? V616)
                                           (do (shen-bindv V616 () V785)
                                            (let Result
                                             (let Hyp (tl V597)
                                              (do (shen-incinfs)
                                               (bind V784
                                                (cons
                                                 (cons (shen-lazyderef X V785)
                                                  (cons :
                                                   (cons
                                                    (shen-lazyderef A V785)
                                                    ())))
                                                 (cons
                                                  (cons (shen-lazyderef Y V785)
                                                   (cons :
                                                    (cons
                                                     (cons vector
                                                      (cons
                                                       (shen-lazyderef A V785)
                                                       ()))
                                                     ())))
                                                  (shen-lazyderef Hyp V785)))
                                                V785 V786)))
                                             (do (shen-unbindv V616 V785)
                                              Result)))
                                           false)))
                                        (if (shen-pvar? V615)
                                         (do (shen-bindv V615 () V785)
                                          (let Result
                                           (let V617
                                            (shen-lazyderef (tl V606) V785)
                                            (if (= () V617)
                                             (let Hyp (tl V597)
                                              (do (shen-incinfs)
                                               (bind V784
                                                (cons
                                                 (cons (shen-lazyderef X V785)
                                                  (cons :
                                                   (cons
                                                    (shen-lazyderef A V785)
                                                    ())))
                                                 (cons
                                                  (cons (shen-lazyderef Y V785)
                                                   (cons :
                                                    (cons
                                                     (cons vector
                                                      (cons
                                                       (shen-lazyderef A V785)
                                                       ()))
                                                     ())))
                                                  (shen-lazyderef Hyp V785)))
                                                V785 V786)))
                                             (if (shen-pvar? V617)
                                              (do (shen-bindv V617 () V785)
                                               (let Result
                                                (let Hyp (tl V597)
                                                 (do (shen-incinfs)
                                                  (bind V784
                                                   (cons
                                                    (cons
                                                     (shen-lazyderef X V785)
                                                     (cons :
                                                      (cons
                                                       (shen-lazyderef A V785)
                                                       ())))
                                                    (cons
                                                     (cons
                                                      (shen-lazyderef Y V785)
                                                      (cons :
                                                       (cons
                                                        (cons vector
                                                         (cons
                                                          (shen-lazyderef A
                                                           V785)
                                                          ()))
                                                        ())))
                                                     (shen-lazyderef Hyp
                                                      V785)))
                                                   V785 V786)))
                                                (do (shen-unbindv V617 V785)
                                                 Result)))
                                              false)))
                                           (do (shen-unbindv V615 V785)
                                            Result)))
                                         false))))
                                     (if (shen-pvar? V614)
                                      (let A (shen-newpv V785)
                                       (do (shen-bindv V614 (cons A ()) V785)
                                        (let Result
                                         (let V618
                                          (shen-lazyderef (tl V606) V785)
                                          (if (= () V618)
                                           (let Hyp (tl V597)
                                            (do (shen-incinfs)
                                             (bind V784
                                              (cons
                                               (cons (shen-lazyderef X V785)
                                                (cons :
                                                 (cons (shen-lazyderef A V785)
                                                  ())))
                                               (cons
                                                (cons (shen-lazyderef Y V785)
                                                 (cons :
                                                  (cons
                                                   (cons vector
                                                    (cons
                                                     (shen-lazyderef A V785)
                                                     ()))
                                                   ())))
                                                (shen-lazyderef Hyp V785)))
                                              V785 V786)))
                                           (if (shen-pvar? V618)
                                            (do (shen-bindv V618 () V785)
                                             (let Result
                                              (let Hyp (tl V597)
                                               (do (shen-incinfs)
                                                (bind V784
                                                 (cons
                                                  (cons (shen-lazyderef X V785)
                                                   (cons :
                                                    (cons
                                                     (shen-lazyderef A V785)
                                                     ())))
                                                  (cons
                                                   (cons
                                                    (shen-lazyderef Y V785)
                                                    (cons :
                                                     (cons
                                                      (cons vector
                                                       (cons
                                                        (shen-lazyderef A V785)
                                                        ()))
                                                      ())))
                                                   (shen-lazyderef Hyp V785)))
                                                 V785 V786)))
                                              (do (shen-unbindv V618 V785)
                                               Result)))
                                            false)))
                                         (do (shen-unbindv V614 V785)
                                          Result))))
                                      false)))
                                   (do (shen-unbindv V608 V785) Result)))
                                 false)))
                              (if (shen-pvar? V607)
                               (let A (shen-newpv V785)
                                (do
                                 (shen-bindv V607 (cons vector (cons A ()))
                                  V785)
                                 (let Result
                                  (let V619 (shen-lazyderef (tl V606) V785)
                                   (if (= () V619)
                                    (let Hyp (tl V597)
                                     (do (shen-incinfs)
                                      (bind V784
                                       (cons
                                        (cons (shen-lazyderef X V785)
                                         (cons :
                                          (cons (shen-lazyderef A V785) ())))
                                        (cons
                                         (cons (shen-lazyderef Y V785)
                                          (cons :
                                           (cons
                                            (cons vector
                                             (cons (shen-lazyderef A V785)
                                              ()))
                                            ())))
                                         (shen-lazyderef Hyp V785)))
                                       V785 V786)))
                                    (if (shen-pvar? V619)
                                     (do (shen-bindv V619 () V785)
                                      (let Result
                                       (let Hyp (tl V597)
                                        (do (shen-incinfs)
                                         (bind V784
                                          (cons
                                           (cons (shen-lazyderef X V785)
                                            (cons :
                                             (cons (shen-lazyderef A V785)
                                              ())))
                                           (cons
                                            (cons (shen-lazyderef Y V785)
                                             (cons :
                                              (cons
                                               (cons vector
                                                (cons (shen-lazyderef A V785)
                                                 ()))
                                               ())))
                                            (shen-lazyderef Hyp V785)))
                                          V785 V786)))
                                       (do (shen-unbindv V619 V785) Result)))
                                     false)))
                                  (do (shen-unbindv V607 V785) Result))))
                               false)))
                            false))
                          false))
                        false))
                      false)))
                   false)))
                false))
              false))
            false))
          false))
        false))
      (if (= Case false)
       (let Case
        (let V620 (shen-lazyderef V783 V785)
         (if (cons? V620)
          (let V621 (shen-lazyderef (hd V620) V785)
           (if (cons? V621)
            (let V622 (shen-lazyderef (hd V621) V785)
             (if (cons? V622)
              (let V623 (shen-lazyderef (hd V622) V785)
               (if (= @s V623)
                (let V624 (shen-lazyderef (tl V622) V785)
                 (if (cons? V624)
                  (let X (hd V624)
                   (let V625 (shen-lazyderef (tl V624) V785)
                    (if (cons? V625)
                     (let Y (hd V625)
                      (let V626 (shen-lazyderef (tl V625) V785)
                       (if (= () V626)
                        (let V627 (shen-lazyderef (tl V621) V785)
                         (if (cons? V627)
                          (let V628 (shen-lazyderef (hd V627) V785)
                           (if (= : V628)
                            (let V629 (shen-lazyderef (tl V627) V785)
                             (if (cons? V629)
                              (let V630 (shen-lazyderef (hd V629) V785)
                               (if (= string V630)
                                (let V631 (shen-lazyderef (tl V629) V785)
                                 (if (= () V631)
                                  (let Hyp (tl V620)
                                   (do (shen-incinfs)
                                    (bind V784
                                     (cons
                                      (cons (shen-lazyderef X V785)
                                       (cons : (cons string ())))
                                      (cons
                                       (cons (shen-lazyderef Y V785)
                                        (cons : (cons string ())))
                                       (shen-lazyderef Hyp V785)))
                                     V785 V786)))
                                  (if (shen-pvar? V631)
                                   (do (shen-bindv V631 () V785)
                                    (let Result
                                     (let Hyp (tl V620)
                                      (do (shen-incinfs)
                                       (bind V784
                                        (cons
                                         (cons (shen-lazyderef X V785)
                                          (cons : (cons string ())))
                                         (cons
                                          (cons (shen-lazyderef Y V785)
                                           (cons : (cons string ())))
                                          (shen-lazyderef Hyp V785)))
                                        V785 V786)))
                                     (do (shen-unbindv V631 V785) Result)))
                                   false)))
                                (if (shen-pvar? V630)
                                 (do (shen-bindv V630 string V785)
                                  (let Result
                                   (let V632 (shen-lazyderef (tl V629) V785)
                                    (if (= () V632)
                                     (let Hyp (tl V620)
                                      (do (shen-incinfs)
                                       (bind V784
                                        (cons
                                         (cons (shen-lazyderef X V785)
                                          (cons : (cons string ())))
                                         (cons
                                          (cons (shen-lazyderef Y V785)
                                           (cons : (cons string ())))
                                          (shen-lazyderef Hyp V785)))
                                        V785 V786)))
                                     (if (shen-pvar? V632)
                                      (do (shen-bindv V632 () V785)
                                       (let Result
                                        (let Hyp (tl V620)
                                         (do (shen-incinfs)
                                          (bind V784
                                           (cons
                                            (cons (shen-lazyderef X V785)
                                             (cons : (cons string ())))
                                            (cons
                                             (cons (shen-lazyderef Y V785)
                                              (cons : (cons string ())))
                                             (shen-lazyderef Hyp V785)))
                                           V785 V786)))
                                        (do (shen-unbindv V632 V785) Result)))
                                      false)))
                                   (do (shen-unbindv V630 V785) Result)))
                                 false)))
                              false))
                            false))
                          false))
                        false)))
                     false)))
                  false))
                false))
              false))
            false))
          false))
        (if (= Case false)
         (let V633 (shen-lazyderef V783 V785)
          (if (cons? V633)
           (let X (hd V633)
            (let Hyp (tl V633)
             (let NewHyps (shen-newpv V785)
              (do (shen-incinfs)
               (bind V784
                (cons (shen-lazyderef X V785) (shen-lazyderef NewHyps V785))
                V785 (freeze (shen-t*-hyps Hyp NewHyps V785 V786)))))))
           false))
         Case))
       Case))
     Case))
   Case)))

(defun shen-show (V799 V800 V801 V802)
 (cond
  ((value shen-*spy*)
   (do (shen-line)
    (do (shen-show-p (shen-deref V799 V801))
     (do (nl 1)
      (do (nl 1)
       (do (shen-show-assumptions (shen-deref V800 V801) 1)
        (do (intoutput "~%> " ())
         (do (shen-pause-for-user (value *language*)) (thaw V802)))))))))
  (true (thaw V802))))

(defun shen-line ()
 (let Infs (inferences _)
  (intoutput
   "____________________________________________________________ ~A inference~A ~%?- "
   (@p Infs (@p (if (= 1 Infs) "" "s") ())))))

(defun shen-show-p (V803)
 (cond
  ((and (cons? V803)
    (and (cons? (tl V803))
     (and (= : (hd (tl V803)))
      (and (cons? (tl (tl V803))) (= () (tl (tl (tl V803))))))))
   (intoutput "~R : ~R" (@p (hd V803) (@p (hd (tl (tl V803))) ()))))
  (true (intoutput "~R" (@p V803 ())))))

(defun shen-show-assumptions (V806 V807)
 (cond ((= () V806) shen-skip)
  ((cons? V806)
   (do (intoutput "~A. " (@p V807 ()))
    (do (shen-show-p (hd V806))
     (do (nl 1) (shen-show-assumptions (tl V806) (+ V807 1))))))
  (true (shen-f_error shen-show-assumptions))))

(defun shen-pause-for-user (V812)
 (cond
  ((= "Common Lisp" V812)
   (let I (FORMAT () "~C" (READ-CHAR))
    (if (= I "a") (interror "input aborted~%" ()) (nl 1))))
  (true
   (let I (shen-read-char)
    (if (= I "a") (interror "input aborted~%" ()) (nl 1))))))

(defun shen-read-char () (shen-read-char-h (read-byte (stinput 0)) 0))

(defun shen-read-char-h (V815 V816)
 (cond
  ((and (= -1 V815) (= 0 V816)) (shen-read-char-h (read-byte (stinput 0)) 1))
  ((= 0 V816) (shen-read-char-h (read-byte (stinput 0)) 0))
  ((and (= -1 V815) (= 1 V816)) (shen-read-char-h (read-byte (stinput 0)) 1))
  ((= 1 V816) (byte->string V815)) (true (shen-f_error shen-read-char-h))))

(defun shen-typedf? (V817) (element? V817 (value shen-*signedfuncs*)))

(defun shen-sigf (V818) (concat shen-type-signature-of- V818))

(defun shen-placeholder () (gensym &&))

(defun shen-base (V819 V820 V821 V822)
 (let Case
  (let V536 (shen-lazyderef V820 V821)
   (if (= number V536)
    (do (shen-incinfs) (fwhen (number? (shen-lazyderef V819 V821)) V821 V822))
    (if (shen-pvar? V536)
     (do (shen-bindv V536 number V821)
      (let Result
       (do (shen-incinfs)
        (fwhen (number? (shen-lazyderef V819 V821)) V821 V822))
       (do (shen-unbindv V536 V821) Result)))
     false)))
  (if (= Case false)
   (let Case
    (let V537 (shen-lazyderef V820 V821)
     (if (= boolean V537)
      (do (shen-incinfs)
       (fwhen (boolean? (shen-lazyderef V819 V821)) V821 V822))
      (if (shen-pvar? V537)
       (do (shen-bindv V537 boolean V821)
        (let Result
         (do (shen-incinfs)
          (fwhen (boolean? (shen-lazyderef V819 V821)) V821 V822))
         (do (shen-unbindv V537 V821) Result)))
       false)))
    (if (= Case false)
     (let Case
      (let V538 (shen-lazyderef V820 V821)
       (if (= string V538)
        (do (shen-incinfs)
         (fwhen (string? (shen-lazyderef V819 V821)) V821 V822))
        (if (shen-pvar? V538)
         (do (shen-bindv V538 string V821)
          (let Result
           (do (shen-incinfs)
            (fwhen (string? (shen-lazyderef V819 V821)) V821 V822))
           (do (shen-unbindv V538 V821) Result)))
         false)))
      (if (= Case false)
       (let Case
        (let V539 (shen-lazyderef V820 V821)
         (if (= symbol V539)
          (do (shen-incinfs)
           (fwhen (symbol? (shen-lazyderef V819 V821)) V821
            (freeze
             (fwhen (not (shen-placeholder? (shen-lazyderef V819 V821))) V821
              V822))))
          (if (shen-pvar? V539)
           (do (shen-bindv V539 symbol V821)
            (let Result
             (do (shen-incinfs)
              (fwhen (symbol? (shen-lazyderef V819 V821)) V821
               (freeze
                (fwhen (not (shen-placeholder? (shen-lazyderef V819 V821)))
                 V821 V822))))
             (do (shen-unbindv V539 V821) Result)))
           false)))
        (if (= Case false)
         (let V540 (shen-lazyderef V819 V821)
          (if (= () V540)
           (let V541 (shen-lazyderef V820 V821)
            (if (cons? V541)
             (let V542 (shen-lazyderef (hd V541) V821)
              (if (= list V542)
               (let V543 (shen-lazyderef (tl V541) V821)
                (if (cons? V543)
                 (let A (hd V543)
                  (let V544 (shen-lazyderef (tl V543) V821)
                   (if (= () V544) (do (shen-incinfs) (thaw V822))
                    (if (shen-pvar? V544)
                     (do (shen-bindv V544 () V821)
                      (let Result (do (shen-incinfs) (thaw V822))
                       (do (shen-unbindv V544 V821) Result)))
                     false))))
                 (if (shen-pvar? V543)
                  (let A (shen-newpv V821)
                   (do (shen-bindv V543 (cons A ()) V821)
                    (let Result (do (shen-incinfs) (thaw V822))
                     (do (shen-unbindv V543 V821) Result))))
                  false)))
               (if (shen-pvar? V542)
                (do (shen-bindv V542 list V821)
                 (let Result
                  (let V545 (shen-lazyderef (tl V541) V821)
                   (if (cons? V545)
                    (let A (hd V545)
                     (let V546 (shen-lazyderef (tl V545) V821)
                      (if (= () V546) (do (shen-incinfs) (thaw V822))
                       (if (shen-pvar? V546)
                        (do (shen-bindv V546 () V821)
                         (let Result (do (shen-incinfs) (thaw V822))
                          (do (shen-unbindv V546 V821) Result)))
                        false))))
                    (if (shen-pvar? V545)
                     (let A (shen-newpv V821)
                      (do (shen-bindv V545 (cons A ()) V821)
                       (let Result (do (shen-incinfs) (thaw V822))
                        (do (shen-unbindv V545 V821) Result))))
                     false)))
                  (do (shen-unbindv V542 V821) Result)))
                false)))
             (if (shen-pvar? V541)
              (let A (shen-newpv V821)
               (do (shen-bindv V541 (cons list (cons A ())) V821)
                (let Result (do (shen-incinfs) (thaw V822))
                 (do (shen-unbindv V541 V821) Result))))
              false)))
           false))
         Case))
       Case))
     Case))
   Case)))

(defun shen-placeholder? (V823)
 (and (symbol? V823) (shen-placeholder-help? (str V823))))

(defun shen-placeholder-help? (V830)
 (cond
  ((and (shen-+string? V830)
    (and (= "&" (pos V830 0))
     (and (shen-+string? (tlstr V830)) (= "&" (pos (tlstr V830) 0)))))
   true)
  (true false)))

(defun shen-by_hypothesis (V831 V832 V833 V834 V835)
 (let Case
  (let V527 (shen-lazyderef V833 V834)
   (if (cons? V527)
    (let V528 (shen-lazyderef (hd V527) V834)
     (if (cons? V528)
      (let Y (hd V528)
       (let V529 (shen-lazyderef (tl V528) V834)
        (if (cons? V529)
         (let V530 (shen-lazyderef (hd V529) V834)
          (if (= : V530)
           (let V531 (shen-lazyderef (tl V529) V834)
            (if (cons? V531)
             (let B (hd V531)
              (let V532 (shen-lazyderef (tl V531) V834)
               (if (= () V532)
                (do (shen-incinfs)
                 (identical V831 Y V834 (freeze (unify! V832 B V834 V835))))
                false)))
             false))
           false))
         false)))
      false))
    false))
  (if (= Case false)
   (let V533 (shen-lazyderef V833 V834)
    (if (cons? V533)
     (let Hyp (tl V533)
      (do (shen-incinfs) (shen-by_hypothesis V831 V832 Hyp V834 V835)))
     false))
   Case)))

(defun shen-t*-def (V836 V837 V838 V839 V840)
 (let Throwcontrol (shen-catchpoint)
  (shen-cutpoint Throwcontrol
   (let V521 (shen-lazyderef V836 V839)
    (if (cons? V521)
     (let V522 (shen-lazyderef (hd V521) V839)
      (if (= define V522)
       (let V523 (shen-lazyderef (tl V521) V839)
        (if (cons? V523)
         (let F (hd V523)
          (let X (tl V523)
           (let Error (shen-newpv V839)
            (let Sig+Rules (shen-newpv V839)
             (let Vars (shen-newpv V839)
              (let Rules (shen-newpv V839)
               (let Sig&& (shen-newpv V839)
                (let Declare (shen-newpv V839)
                 (let Sig (shen-newpv V839)
                  (do (shen-incinfs)
                   (bind Sig+Rules
                    (compile (lambda X (shen-<sig+rules> X))
                     (shen-lazyderef X V839) ())
                    V839
                    (freeze
                     (bind Error
                      (if (= (shen-lazyderef Sig+Rules V839) (fail))
                       (shen-errordef (shen-lazyderef F V839)) shen-skip)
                      V839
                      (freeze
                       (bind Sig (hd (shen-lazyderef Sig+Rules V839)) V839
                        (freeze
                         (bind Rules (tl (shen-lazyderef Sig+Rules V839)) V839
                          (freeze
                           (bind Vars
                            (shen-extract_vars (shen-lazyderef Sig V839)) V839
                            (freeze
                             (bind Sig&&
                              (shen-placeholders (shen-lazyderef Sig V839)
                               (shen-lazyderef Vars V839))
                              V839
                              (freeze
                               (cut Throwcontrol V839
                                (freeze
                                 (shen-t*-rules Rules Sig&& 1 F
                                  (cons (cons F (cons : (cons Sig&& ())))
                                   V838)
                                  V839
                                  (freeze
                                   (bind Declare
                                    (declare (shen-lazyderef F V839)
                                     (shen-lazyderef Sig V839))
                                    V839
                                    (freeze
                                     (unify! V837 Sig V839
                                      V840)))))))))))))))))))))))))))))
         false))
       false))
     false)))))

(defun shen-<sig+rules> (V845)
 (let Result
  (let Parse_<signature> (shen-<signature> V845)
   (if (not (= (fail) Parse_<signature>))
    (let Parse_<trules> (shen-<trules> Parse_<signature>)
     (if (not (= (fail) Parse_<trules>))
      (shen-reassemble (fst Parse_<trules>)
       (cons (snd Parse_<signature>) (snd Parse_<trules>)))
      (fail)))
    (fail)))
  (if (= Result (fail)) (fail) Result)))

(defun shen-placeholders (V850 V851)
 (cond ((cons? V850) (map (lambda Z (shen-placeholders Z V851)) V850))
  ((element? V850 V851) (concat && V850)) (true V850)))

(defun shen-<trules> (V856)
 (let Result
  (let Parse_<trule> (shen-<trule> V856)
   (if (not (= (fail) Parse_<trule>))
    (let Parse_<trules> (shen-<trules> Parse_<trule>)
     (if (not (= (fail) Parse_<trules>))
      (shen-reassemble (fst Parse_<trules>)
       (cons (snd Parse_<trule>) (snd Parse_<trules>)))
      (fail)))
    (fail)))
  (if (= Result (fail))
   (let Result
    (let Parse_<trule> (shen-<trule> V856)
     (if (not (= (fail) Parse_<trule>))
      (shen-reassemble (fst Parse_<trule>) (cons (snd Parse_<trule>) ()))
      (fail)))
    (if (= Result (fail)) (fail) Result))
   Result)))

(defun shen-<trule> (V861)
 (let Result
  (let Parse_<patterns> (shen-<patterns> V861)
   (if (not (= (fail) Parse_<patterns>))
    (let Parse_<arrow> (shen-<arrow> Parse_<patterns>)
     (if (not (= (fail) Parse_<arrow>))
      (let Parse_<action> (shen-<action> Parse_<arrow>)
       (if (not (= (fail) Parse_<action>))
        (let Parse_<guard?> (shen-<guard?> Parse_<action>)
         (if (not (= (fail) Parse_<guard?>))
          (shen-reassemble (fst Parse_<guard?>)
           (let Vars (shen-extract_vars (snd Parse_<patterns>))
            (let Patterns (shen-placeholders (snd Parse_<patterns>) Vars)
             (let Action
              (shen-placeholders (shen-curry (snd Parse_<action>)) Vars)
              (let Guard
               (shen-placeholders (shen-curry (snd Parse_<guard?>)) Vars)
               (shen-form-rule Patterns (snd Parse_<arrow>) Action Guard))))))
          (fail)))
        (fail)))
      (fail)))
    (fail)))
  (if (= Result (fail)) (fail) Result)))

(defun shen-form-rule (V862 V863 V864 V865)
 (cond
  ((= shen-forward V863)
   (cons V862
    (cons (if (= V865 shen-skip) V864 (cons where (cons V865 (cons V864 ()))))
     ())))
  ((and (= shen-backward V863)
    (and (cons? V864)
     (and (cons? (hd V864))
      (and (= fail-if (hd (hd V864)))
       (and (cons? (tl (hd V864)))
        (and (= () (tl (tl (hd V864))))
         (and (cons? (tl V864)) (= () (tl (tl V864))))))))))
   (cons V862
    (cons
     (if (= V865 shen-skip)
      (cons where
       (cons (cons not (cons (cons (hd (tl (hd V864))) (tl V864)) ()))
        (tl V864)))
      (cons where
       (cons
        (cons (cons and (cons V865 ()))
         (cons (cons not (cons (cons (hd (tl (hd V864))) (tl V864)) ())) ()))
        (tl V864))))
     ())))
  ((= shen-backward V863)
   (cons V862
    (cons
     (if (= V865 shen-skip)
      (cons where
       (cons
        (cons not
         (cons (cons (cons == (cons V864 ())) (cons (cons fail ()) ()))
          ()))
        (cons V864 ())))
      (cons where
       (cons
        (cons (cons and (cons V865 ()))
         (cons
          (cons not
           (cons (cons (cons == (cons V864 ())) (cons (cons fail ()) ()))
            ()))
          ()))
        (cons V864 ()))))
     ())))
  (true (shen-f_error shen-form-rule))))

(defun shen-<guard?> (V870)
 (let Result
  (if (and (cons? (fst V870)) (= where (hd (fst V870))))
   (let Parse_<guard>
    (shen-<guard> (shen-reassemble (tl (fst V870)) (snd V870)))
    (if (not (= (fail) Parse_<guard>))
     (shen-reassemble (fst Parse_<guard>) (snd Parse_<guard>)) (fail)))
   (fail))
  (if (= Result (fail))
   (let Result
    (let Parse_<e> (<e> V870)
     (if (not (= (fail) Parse_<e>)) (shen-reassemble (fst Parse_<e>) shen-skip)
      (fail)))
    (if (= Result (fail)) (fail) Result))
   Result)))

(defun shen-<arrow> (V875)
 (let Result
  (if (and (cons? (fst V875)) (= -> (hd (fst V875))))
   (shen-reassemble (fst (shen-reassemble (tl (fst V875)) (snd V875)))
    shen-forward)
   (fail))
  (if (= Result (fail))
   (let Result
    (if (and (cons? (fst V875)) (= <- (hd (fst V875))))
     (shen-reassemble (fst (shen-reassemble (tl (fst V875)) (snd V875)))
      shen-backward)
     (fail))
    (if (= Result (fail)) (fail) Result))
   Result)))

(defun shen-errordef (V876) (interror "syntax error in ~A~%" (@p V876 ())))

(defun shen-t*-rules (V877 V878 V879 V880 V881 V882 V883)
 (let Throwcontrol (shen-catchpoint)
  (shen-cutpoint Throwcontrol
   (let Case
    (let V516 (shen-lazyderef V877 V882)
     (if (= () V516) (do (shen-incinfs) (thaw V883)) false))
    (if (= Case false)
     (let V517 (shen-lazyderef V877 V882)
      (if (cons? V517)
       (let Rule (hd V517)
        (let Rules (tl V517)
         (let M (shen-newpv V882)
          (do (shen-incinfs)
           (shen-t*-rule Rule V878 V879 V880 V881 V882
            (freeze
             (cut Throwcontrol V882
              (freeze
               (bind M (+ (shen-lazyderef V879 V882) 1) V882
                (freeze
                 (shen-t*-rules Rules V878 M V880 V881 V882 V883)))))))))))
       false))
     Case)))))

(defun shen-t*-rule (V884 V885 V886 V887 V888 V889 V890)
 (let Case (do (shen-incinfs) (shen-t*-ruleh V884 V885 V888 V889 V890))
  (if (= Case false)
   (let Error (shen-newpv V889)
    (do (shen-incinfs)
     (bind Error
      (shen-type-insecure-rule-error-message (shen-lazyderef V886 V889)
       (shen-lazyderef V887 V889))
      V889 V890)))
   Case)))

(defun shen-t*-ruleh (V1512 V1513 V1514 V1515 V1516)
 (let Throwcontrol (shen-catchpoint)
  (shen-cutpoint Throwcontrol
   (let Case
    (let V1380 (shen-lazyderef V1512 V1515)
     (if (cons? V1380)
      (let V1381 (shen-lazyderef (hd V1380) V1515)
       (if (= () V1381)
        (let V1382 (shen-lazyderef (tl V1380) V1515)
         (if (cons? V1382)
          (let Result (hd V1382)
           (let V1383 (shen-lazyderef (tl V1382) V1515)
            (if (= () V1383)
             (let V1384 (shen-lazyderef V1513 V1515)
              (if (cons? V1384)
               (let V1385 (shen-lazyderef (hd V1384) V1515)
                (if (= --> V1385)
                 (let V1386 (shen-lazyderef (tl V1384) V1515)
                  (if (cons? V1386)
                   (let A (hd V1386)
                    (let V1387 (shen-lazyderef (tl V1386) V1515)
                     (if (= () V1387)
                      (do (shen-incinfs)
                       (cut Throwcontrol V1515
                        (freeze (shen-th* Result A V1514 V1515 V1516))))
                      (if (shen-pvar? V1387)
                       (do (shen-bindv V1387 () V1515)
                        (let Result
                         (do (shen-incinfs)
                          (cut Throwcontrol V1515
                           (freeze (shen-th* Result A V1514 V1515 V1516))))
                         (do (shen-unbindv V1387 V1515) Result)))
                       false))))
                   (if (shen-pvar? V1386)
                    (let A (shen-newpv V1515)
                     (do (shen-bindv V1386 (cons A ()) V1515)
                      (let Result
                       (do (shen-incinfs)
                        (cut Throwcontrol V1515
                         (freeze (shen-th* Result A V1514 V1515 V1516))))
                       (do (shen-unbindv V1386 V1515) Result))))
                    false)))
                 (if (shen-pvar? V1385)
                  (do (shen-bindv V1385 --> V1515)
                   (let Result
                    (let V1388 (shen-lazyderef (tl V1384) V1515)
                     (if (cons? V1388)
                      (let A (hd V1388)
                       (let V1389 (shen-lazyderef (tl V1388) V1515)
                        (if (= () V1389)
                         (do (shen-incinfs)
                          (cut Throwcontrol V1515
                           (freeze (shen-th* Result A V1514 V1515 V1516))))
                         (if (shen-pvar? V1389)
                          (do (shen-bindv V1389 () V1515)
                           (let Result
                            (do (shen-incinfs)
                             (cut Throwcontrol V1515
                              (freeze (shen-th* Result A V1514 V1515 V1516))))
                            (do (shen-unbindv V1389 V1515) Result)))
                          false))))
                      (if (shen-pvar? V1388)
                       (let A (shen-newpv V1515)
                        (do (shen-bindv V1388 (cons A ()) V1515)
                         (let Result
                          (do (shen-incinfs)
                           (cut Throwcontrol V1515
                            (freeze (shen-th* Result A V1514 V1515 V1516))))
                          (do (shen-unbindv V1388 V1515) Result))))
                       false)))
                    (do (shen-unbindv V1385 V1515) Result)))
                  false)))
               (if (shen-pvar? V1384)
                (let A (shen-newpv V1515)
                 (do (shen-bindv V1384 (cons --> (cons A ())) V1515)
                  (let Result
                   (do (shen-incinfs)
                    (cut Throwcontrol V1515
                     (freeze (shen-th* Result A V1514 V1515 V1516))))
                   (do (shen-unbindv V1384 V1515) Result))))
                false)))
             false)))
          false))
        false))
      false))
    (if (= Case false)
     (let V1390 (shen-lazyderef V1512 V1515)
      (if (cons? V1390)
       (let Patterns (hd V1390)
        (let V1391 (shen-lazyderef (tl V1390) V1515)
         (if (cons? V1391)
          (let Result (hd V1391)
           (let V1392 (shen-lazyderef (tl V1391) V1515)
            (if (= () V1392)
             (let NewHyp (shen-newpv V1515)
              (let B (shen-newpv V1515)
               (let AllHyp (shen-newpv V1515)
                (do (shen-incinfs)
                 (shen-t*-patterns Patterns V1513 NewHyp B V1515
                  (freeze
                   (cut Throwcontrol V1515
                    (freeze
                     (shen-conc NewHyp V1514 AllHyp V1515
                      (freeze
                       (cut Throwcontrol V1515
                        (freeze
                         (shen-th* Result B AllHyp V1515 V1516)))))))))))))
             false)))
          false)))
       false))
     Case)))))

(defun shen-type-insecure-rule-error-message (V896 V897)
 (interror "type error in rule ~A of ~A~%" (@p V896 (@p V897 ()))))

(defun shen-t*-patterns (V898 V899 V900 V901 V902 V903)
 (let Throwcontrol (shen-catchpoint)
  (shen-cutpoint Throwcontrol
   (let Case
    (let V484 (shen-lazyderef V898 V902)
     (if (= () V484)
      (let V485 (shen-lazyderef V900 V902)
       (if (= () V485) (do (shen-incinfs) (unify! V901 V899 V902 V903))
        (if (shen-pvar? V485)
         (do (shen-bindv V485 () V902)
          (let Result (do (shen-incinfs) (unify! V901 V899 V902 V903))
           (do (shen-unbindv V485 V902) Result)))
         false)))
      false))
    (if (= Case false)
     (let V486 (shen-lazyderef V898 V902)
      (if (cons? V486)
       (let Pattern478 (hd V486)
        (let Patterns (tl V486)
         (let V487 (shen-lazyderef V899 V902)
          (if (cons? V487)
           (let A479 (hd V487)
            (let V488 (shen-lazyderef (tl V487) V902)
             (if (cons? V488)
              (let V489 (shen-lazyderef (hd V488) V902)
               (if (= --> V489)
                (let V490 (shen-lazyderef (tl V488) V902)
                 (if (cons? V490)
                  (let B (hd V490)
                   (let V491 (shen-lazyderef (tl V490) V902)
                    (if (= () V491)
                     (let V492 (shen-lazyderef V900 V902)
                      (if (cons? V492)
                       (let V493 (shen-lazyderef (hd V492) V902)
                        (if (cons? V493)
                         (let Pattern (hd V493)
                          (let V494 (shen-lazyderef (tl V493) V902)
                           (if (cons? V494)
                            (let V495 (shen-lazyderef (hd V494) V902)
                             (if (= : V495)
                              (let V496 (shen-lazyderef (tl V494) V902)
                               (if (cons? V496)
                                (let A (hd V496)
                                 (let V497 (shen-lazyderef (tl V496) V902)
                                  (if (= () V497)
                                   (let Hyp (tl V492)
                                    (let Assume (shen-newpv V902)
                                     (do (shen-incinfs)
                                      (unify! A A479 V902
                                       (freeze
                                        (unify! Pattern Pattern478 V902
                                         (freeze
                                          (shen-t*-assume Pattern Assume V902
                                           (freeze
                                            (cut Throwcontrol V902
                                             (freeze
                                              (shen-th* Pattern A Assume V902
                                               (freeze
                                                (cut Throwcontrol V902
                                                 (freeze
                                                  (shen-t*-patterns Patterns B
                                                   Hyp V901 V902
                                                   V903))))))))))))))))
                                   (if (shen-pvar? V497)
                                    (do (shen-bindv V497 () V902)
                                     (let Result
                                      (let Hyp (tl V492)
                                       (let Assume (shen-newpv V902)
                                        (do (shen-incinfs)
                                         (unify! A A479 V902
                                          (freeze
                                           (unify! Pattern Pattern478 V902
                                            (freeze
                                             (shen-t*-assume Pattern Assume
                                              V902
                                              (freeze
                                               (cut Throwcontrol V902
                                                (freeze
                                                 (shen-th* Pattern A Assume
                                                  V902
                                                  (freeze
                                                   (cut Throwcontrol V902
                                                    (freeze
                                                     (shen-t*-patterns Patterns
                                                      B Hyp V901 V902
                                                      V903))))))))))))))))
                                      (do (shen-unbindv V497 V902) Result)))
                                    false))))
                                (if (shen-pvar? V496)
                                 (let A (shen-newpv V902)
                                  (do (shen-bindv V496 (cons A ()) V902)
                                   (let Result
                                    (let Hyp (tl V492)
                                     (let Assume (shen-newpv V902)
                                      (do (shen-incinfs)
                                       (unify! A A479 V902
                                        (freeze
                                         (unify! Pattern Pattern478 V902
                                          (freeze
                                           (shen-t*-assume Pattern Assume V902
                                            (freeze
                                             (cut Throwcontrol V902
                                              (freeze
                                               (shen-th* Pattern A Assume V902
                                                (freeze
                                                 (cut Throwcontrol V902
                                                  (freeze
                                                   (shen-t*-patterns Patterns B
                                                    Hyp V901 V902
                                                    V903))))))))))))))))
                                    (do (shen-unbindv V496 V902) Result))))
                                 false)))
                              (if (shen-pvar? V495)
                               (do (shen-bindv V495 : V902)
                                (let Result
                                 (let V498 (shen-lazyderef (tl V494) V902)
                                  (if (cons? V498)
                                   (let A (hd V498)
                                    (let V499 (shen-lazyderef (tl V498) V902)
                                     (if (= () V499)
                                      (let Hyp (tl V492)
                                       (let Assume (shen-newpv V902)
                                        (do (shen-incinfs)
                                         (unify! A A479 V902
                                          (freeze
                                           (unify! Pattern Pattern478 V902
                                            (freeze
                                             (shen-t*-assume Pattern Assume
                                              V902
                                              (freeze
                                               (cut Throwcontrol V902
                                                (freeze
                                                 (shen-th* Pattern A Assume
                                                  V902
                                                  (freeze
                                                   (cut Throwcontrol V902
                                                    (freeze
                                                     (shen-t*-patterns Patterns
                                                      B Hyp V901 V902
                                                      V903))))))))))))))))
                                      (if (shen-pvar? V499)
                                       (do (shen-bindv V499 () V902)
                                        (let Result
                                         (let Hyp (tl V492)
                                          (let Assume (shen-newpv V902)
                                           (do (shen-incinfs)
                                            (unify! A A479 V902
                                             (freeze
                                              (unify! Pattern Pattern478 V902
                                               (freeze
                                                (shen-t*-assume Pattern Assume
                                                 V902
                                                 (freeze
                                                  (cut Throwcontrol V902
                                                   (freeze
                                                    (shen-th* Pattern A Assume
                                                     V902
                                                     (freeze
                                                      (cut Throwcontrol V902
                                                       (freeze
                                                        (shen-t*-patterns
                                                         Patterns B Hyp V901
                                                         V902
                                                         V903))))))))))))))))
                                         (do (shen-unbindv V499 V902) Result)))
                                       false))))
                                   (if (shen-pvar? V498)
                                    (let A (shen-newpv V902)
                                     (do (shen-bindv V498 (cons A ()) V902)
                                      (let Result
                                       (let Hyp (tl V492)
                                        (let Assume (shen-newpv V902)
                                         (do (shen-incinfs)
                                          (unify! A A479 V902
                                           (freeze
                                            (unify! Pattern Pattern478 V902
                                             (freeze
                                              (shen-t*-assume Pattern Assume
                                               V902
                                               (freeze
                                                (cut Throwcontrol V902
                                                 (freeze
                                                  (shen-th* Pattern A Assume
                                                   V902
                                                   (freeze
                                                    (cut Throwcontrol V902
                                                     (freeze
                                                      (shen-t*-patterns
                                                       Patterns B Hyp V901 V902
                                                       V903))))))))))))))))
                                       (do (shen-unbindv V498 V902) Result))))
                                    false)))
                                 (do (shen-unbindv V495 V902) Result)))
                               false)))
                            (if (shen-pvar? V494)
                             (let A (shen-newpv V902)
                              (do
                               (shen-bindv V494 (cons : (cons A ())) V902)
                               (let Result
                                (let Hyp (tl V492)
                                 (let Assume (shen-newpv V902)
                                  (do (shen-incinfs)
                                   (unify! A A479 V902
                                    (freeze
                                     (unify! Pattern Pattern478 V902
                                      (freeze
                                       (shen-t*-assume Pattern Assume V902
                                        (freeze
                                         (cut Throwcontrol V902
                                          (freeze
                                           (shen-th* Pattern A Assume V902
                                            (freeze
                                             (cut Throwcontrol V902
                                              (freeze
                                               (shen-t*-patterns Patterns B Hyp
                                                V901 V902 V903))))))))))))))))
                                (do (shen-unbindv V494 V902) Result))))
                             false))))
                         (if (shen-pvar? V493)
                          (let Pattern (shen-newpv V902)
                           (let A (shen-newpv V902)
                            (do
                             (shen-bindv V493
                              (cons Pattern (cons : (cons A ()))) V902)
                             (let Result
                              (let Hyp (tl V492)
                               (let Assume (shen-newpv V902)
                                (do (shen-incinfs)
                                 (unify! A A479 V902
                                  (freeze
                                   (unify! Pattern Pattern478 V902
                                    (freeze
                                     (shen-t*-assume Pattern Assume V902
                                      (freeze
                                       (cut Throwcontrol V902
                                        (freeze
                                         (shen-th* Pattern A Assume V902
                                          (freeze
                                           (cut Throwcontrol V902
                                            (freeze
                                             (shen-t*-patterns Patterns B Hyp
                                              V901 V902 V903))))))))))))))))
                              (do (shen-unbindv V493 V902) Result)))))
                          false)))
                       (if (shen-pvar? V492)
                        (let Pattern (shen-newpv V902)
                         (let A (shen-newpv V902)
                          (let Hyp (shen-newpv V902)
                           (do
                            (shen-bindv V492
                             (cons (cons Pattern (cons : (cons A ()))) Hyp)
                             V902)
                            (let Result
                             (let Assume (shen-newpv V902)
                              (do (shen-incinfs)
                               (unify! A A479 V902
                                (freeze
                                 (unify! Pattern Pattern478 V902
                                  (freeze
                                   (shen-t*-assume Pattern Assume V902
                                    (freeze
                                     (cut Throwcontrol V902
                                      (freeze
                                       (shen-th* Pattern A Assume V902
                                        (freeze
                                         (cut Throwcontrol V902
                                          (freeze
                                           (shen-t*-patterns Patterns B Hyp
                                            V901 V902 V903)))))))))))))))
                             (do (shen-unbindv V492 V902) Result))))))
                        false)))
                     false)))
                  false))
                false))
              false)))
           false))))
       false))
     Case)))))

(defun shen-t*-assume (V904 V905 V906 V907)
 (let Throwcontrol (shen-catchpoint)
  (shen-cutpoint Throwcontrol
   (let Case
    (let V475 (shen-lazyderef V904 V906)
     (if (cons? V475)
      (let X (hd V475)
       (let Y (tl V475)
        (let A1 (shen-newpv V906)
         (let A2 (shen-newpv V906)
          (do (shen-incinfs)
           (cut Throwcontrol V906
            (freeze
             (shen-t*-assume X A1 V906
              (freeze
               (shen-t*-assume Y A2 V906
                (freeze
                 (bind V905
                  (append (shen-lazyderef A1 V906) (shen-lazyderef A2 V906))
                  V906 V907))))))))))))
      false))
    (if (= Case false)
     (let Case
      (let A (shen-newpv V906)
       (do (shen-incinfs)
        (fwhen (shen-placeholder? (shen-lazyderef V904 V906)) V906
         (freeze
          (bind V905
           (cons
            (cons (shen-lazyderef V904 V906)
             (cons : (cons (shen-lazyderef A V906) ())))
            ())
           V906 V907)))))
      (if (= Case false)
       (let V476 (shen-lazyderef V905 V906)
        (if (= () V476) (do (shen-incinfs) (thaw V907))
         (if (shen-pvar? V476)
          (do (shen-bindv V476 () V906)
           (let Result (do (shen-incinfs) (thaw V907))
            (do (shen-unbindv V476 V906) Result)))
          false)))
       Case))
     Case)))))

(defun shen-conc (V908 V909 V910 V911 V912)
 (let Case
  (let V471 (shen-lazyderef V908 V911)
   (if (= () V471)
    (do (shen-incinfs) (bind V910 (shen-lazyderef V909 V911) V911 V912))
    false))
  (if (= Case false)
   (let V472 (shen-lazyderef V908 V911)
    (if (cons? V472)
     (let X (hd V472)
      (let Y (tl V472)
       (let Z (shen-newpv V911)
        (do (shen-incinfs)
         (bind V910 (cons (shen-lazyderef X V911) (shen-lazyderef Z V911)) V911
          (freeze (shen-conc Y V909 Z V911 V912)))))))
     false))
   Case)))

(defun shen-findallhelp (V913 V914 V915 V916 V917 V918)
 (let Case
  (do (shen-incinfs)
   (call V914 V917
    (freeze (shen-remember V916 V913 V917 (freeze (fwhen false V917 V918))))))
  (if (= Case false)
   (do (shen-incinfs) (bind V915 (value (shen-lazyderef V916 V917)) V917 V918))
   Case)))

(defun shen-remember (V919 V920 V921 V922)
 (let B (shen-newpv V921)
  (do (shen-incinfs)
   (bind B
    (set (shen-deref V919 V921)
     (cons (shen-deref V920 V921) (value (shen-deref V919 V921))))
    V921 V922))))

(defun findall (V923 V924 V925 V926 V927)
 (let B (shen-newpv V926)
  (let A (shen-newpv V926)
   (do (shen-incinfs)
    (bind A (gensym a) V926
     (freeze
      (bind B (set (shen-lazyderef A V926) ()) V926
       (freeze (shen-findallhelp V923 V924 V925 A V926 V927)))))))))

(defun shen-findallhelp (V913 V914 V915 V916 V917 V918)
 (let Case
  (do (shen-incinfs)
   (call V914 V917
    (freeze (shen-remember V916 V913 V917 (freeze (fwhen false V917 V918))))))
  (if (= Case false)
   (do (shen-incinfs) (bind V915 (value (shen-lazyderef V916 V917)) V917 V918))
   Case)))

(defun shen-remember (V919 V920 V921 V922)
 (let B (shen-newpv V921)
  (do (shen-incinfs)
   (bind B
    (set (shen-deref V919 V921)
     (cons (shen-deref V920 V921) (value (shen-deref V919 V921))))
    V921 V922))))

